from mesa import Agent, Model
from mesa.space import MultiGrid
from mesa.time import SimultaneousActivation,RandomActivation
import Agent as agents
import numpy as np

import math
from itertools import chain
import sys
from mesa.datacollection import DataCollector

number_of_stalls = 4 ##Must be between 1 and 4

'''
The Model-object is responsible for the logical structure of our ABM. 

Here, we define our and set-up our visual grid and our logical algorithm

'''


class Model(Model):
    """
    Class representing Model

    Attributes
    ---------
    N : int
        Number of agents in grid in current timestep
    height : int
        height of grid
    width : int
        width of grid
    grid : grid
        Visual grid
    schedule : module
        Logical grid
    datacollector : module
        collects data that we want to analyze
    time_step : int
        Indicates current time step
    minute_count : int
        Counting minutes
    hour_count : int
        Counting hours

    """
    def __init__(self, N, height, width):
        super().__init__()
        self.N = N
        self.height = height
        self.width = width

        #Multigrid (The visual grid, torus wraps edges)
        self.grid = MultiGrid(width, height, torus=False)

        #Schedule (the logical grid)
        self.schedule = SimultaneousActivation(self)

        #Datacollector to collect our data, here we specify which system state we want to track throughout simulation
        self.datacollector = DataCollector(model_reporters={"busy": lambda m: busy_employees(self),
                                                            "queuing": lambda m: queuing(self),
                                                            "transaction": lambda m: number_of_transactions_during_concert(self),
                                                            "transaction_total":lambda m: number_of_transactions_total(self)})
        #Initiate time, minute and hour-count
        self.time_step = 1
        self.minute_count = 1
        self.hour_count = 1


        #The location of the beer stalls, according to how many stalls are currently present
        if number_of_stalls == 1:
            self.stall_positions = [(15,44)]
        elif number_of_stalls == 2:
            self.stall_positions = [(15,44),(15,7)]
        elif number_of_stalls == 3:
            self.stall_positions = [(15,44),(15,7),(40,44)]
        elif number_of_stalls == 4:
            self.stall_positions = [(15,44),(15,7),(40,44),(40,7)]
        else:
            self.stall_positions = [(15,44),(15,7),(40,44),(40,7)]
            print("Invalid number of stalls, default # of stalls chosen which is 4")


        # setting up entre/exit positions
        self.entre_pos = [(5, 0), (6, 0), (5, 49), (6, 49), (35, 0), (35, 49), (36, 0), (36, 49), (49, 35), (49, 20)]
        self.concert_has_ended = False #in the beginning, concert has not started yet
        self.concert_is_on = False

        #making lists for employees, desk_positions and busy employees
        self.employees = []
        self.desk_pos = []
        self.busy = []
        #Setting up visuals: scene, guests, stalls, employees and fences.
        self.sceneCoords = [(0,i) for i in range(math.floor(height/2)-7,math.floor(height/2)+6)]
        self.scene_pos = (0,24)
        setUpGuests(self,N)
        setUpScene(self)
        setUpStalls(self)
        setUpEmployees(self)
        setUpFence(self)

        #List of all the queues' position (2D array flattened using chain.from_iterable)
        self.queues = list(chain.from_iterable([e.queue_list for e in self.schedule.agents if isinstance(e, agents.employee)]))
        self.deleted_agents = []
        setUpEntrePos(self)

    def step(self):

        queuing_andel_4boder = [0.01525, 0.014000000000000002, 0.014249999999999999, 0.0155, 0.01475, 0.014000000000000002, 0.013750000000000002, 0.014249999999999999, 0.015, 0.015, 0.01575, 0.01625, 0.015, 0.016, 0.016, 0.01625, 0.01675, 0.01475, 0.0155, 0.01475, 0.01475, 0.01525, 0.01475, 0.012750000000000001, 0.013000000000000001, 0.013000000000000001, 0.013250000000000001, 0.013250000000000001, 0.014249999999999999, 0.014499999999999999, 0.015, 0.01575, 0.01675, 0.0165, 0.017, 0.0185, 0.01825, 0.01825, 0.0195, 0.0195, 0.01925, 0.019, 0.01825, 0.01875, 0.01875, 0.0185, 0.01925, 0.019, 0.0215, 0.0225, 0.02225, 0.02275, 0.025, 0.02525, 0.027500000000000004, 0.027250000000000003, 0.028499999999999998, 0.028999999999999998, 0.028249999999999997, 0.027750000000000004, 0.027750000000000004, 0.0295, 0.0295, 0.02975, 0.033, 0.03375, 0.033, 0.03175, 0.03325, 0.03375, 0.034, 0.034999999999999996, 0.03725, 0.03975, 0.03825, 0.0395, 0.042249999999999996, 0.042249999999999996, 0.044, 0.04475, 0.043, 0.042749999999999996, 0.04425, 0.0445, 0.04625, 0.046, 0.04575, 0.04425, 0.0435, 0.04375, 0.04325, 0.044, 0.042749999999999996, 0.043, 0.040999999999999995, 0.042249999999999996, 0.04425, 0.044, 0.041749999999999995, 0.044, 0.045, 0.04475, 0.04675, 0.0485, 0.04875, 0.053500000000000006, 0.05275, 0.05175, 0.053500000000000006, 0.05500000000000001, 0.051000000000000004, 0.050249999999999996, 0.050749999999999997, 0.050749999999999997, 0.04875, 0.050249999999999996, 0.04875, 0.04675, 0.048, 0.04525, 0.0455, 0.04425, 0.04425, 0.045, 0.04525, 0.0445, 0.04475, 0.0465, 0.0435, 0.0455, 0.0465, 0.04875, 0.0475, 0.04575, 0.04625, 0.047, 0.048, 0.04825, 0.049, 0.05125, 0.052000000000000005, 0.053000000000000005, 0.05450000000000001, 0.05450000000000001, 0.05425, 0.05550000000000001, 0.05500000000000001, 0.05575, 0.05450000000000001, 0.054000000000000006, 0.05475, 0.05600000000000001, 0.05525, 0.05625, 0.059250000000000004, 0.058499999999999996, 0.059250000000000004, 0.05725, 0.056499999999999995, 0.05525, 0.053500000000000006, 0.05275, 0.054000000000000006, 0.05475, 0.05625, 0.05525, 0.05450000000000001, 0.05375, 0.05325, 0.05550000000000001, 0.05625, 0.058499999999999996, 0.056499999999999995, 0.058750000000000004, 0.057999999999999996, 0.05600000000000001, 0.05425, 0.053500000000000006, 0.05500000000000001, 0.05600000000000001, 0.0595, 0.0615, 0.062, 0.06275, 0.06225000000000001, 0.06275, 0.06425, 0.063, 0.065, 0.0675, 0.068, 0.06775, 0.067, 0.067, 0.06875, 0.06999999999999999, 0.073, 0.07325000000000001, 0.07325000000000001, 0.07425000000000001, 0.0735, 0.074, 0.072, 0.071, 0.0715, 0.0715, 0.07175000000000001, 0.077, 0.07725, 0.0765, 0.075, 0.075, 0.075, 0.074, 0.075, 0.07575, 0.075, 0.0725, 0.073, 0.07125000000000001, 0.07125000000000001, 0.07325000000000001, 0.0755, 0.07925, 0.07925, 0.0795, 0.07675, 0.0755, 0.0745, 0.07325000000000001, 0.0715, 0.06999999999999999, 0.071, 0.07125000000000001, 0.071, 0.07025, 0.071, 0.07075000000000001, 0.07125000000000001, 0.0725, 0.07275000000000001, 0.07425000000000001, 0.07175000000000001, 0.0725, 0.072, 0.074, 0.07375000000000001, 0.0765, 0.0755, 0.07675, 0.07725, 0.0765, 0.07825, 0.08175, 0.08149999999999999, 0.08125, 0.08175, 0.08349999999999999, 0.08275, 0.08525, 0.089, 0.0885, 0.088, 0.0895, 0.09125, 0.09175, 0.09, 0.09125, 0.09175, 0.092, 0.08675000000000001, 0.08475, 0.08549999999999999, 0.08625000000000001, 0.0875, 0.087, 0.0885, 0.09025, 0.095, 0.09525, 0.098, 0.099, 0.09975, 0.09975, 0.10149999999999999, 0.1, 0.0985, 0.096, 0.0935, 0.09425, 0.08975, 0.0895, 0.0885, 0.0895, 0.0895, 0.08625000000000001, 0.08549999999999999, 0.08725000000000001, 0.0865, 0.086, 0.0885, 0.08825, 0.09, 0.091, 0.09125, 0.09075, 0.09075, 0.09125, 0.09225, 0.0935, 0.09325, 0.0915, 0.09, 0.092, 0.09325, 0.09475, 0.10075, 0.10024999999999999, 0.10149999999999999, 0.1035, 0.10425, 0.10500000000000001, 0.1065, 0.1065, 0.10700000000000001, 0.10825, 0.10575000000000001, 0.10774999999999998, 0.10800000000000001, 0.10725, 0.10874999999999999, 0.11000000000000001, 0.10874999999999999, 0.10725, 0.10774999999999998, 0.10800000000000001, 0.10674999999999998, 0.10500000000000001, 0.10375000000000001, 0.10325, 0.0985, 0.098, 0.10075, 0.099, 0.10024999999999999, 0.10024999999999999, 0.10149999999999999, 0.0995, 0.10149999999999999, 0.10425, 0.10500000000000001, 0.10500000000000001, 0.10300000000000001, 0.1025, 0.10400000000000001, 0.10300000000000001, 0.10500000000000001, 0.10774999999999998, 0.10625, 0.10475000000000001, 0.10674999999999998, 0.10874999999999999, 0.11025, 0.10800000000000001, 0.1095, 0.10974999999999999, 0.10774999999999998, 0.10825, 0.10900000000000001, 0.1085, 0.1075, 0.1065, 0.1075, 0.10900000000000001, 0.10500000000000001, 0.10774999999999998, 0.10925, 0.10874999999999999, 0.11100000000000002, 0.1105, 0.10874999999999999, 0.11000000000000001, 0.1095, 0.1095, 0.1115, 0.11399999999999999, 0.11125, 0.11200000000000002, 0.11100000000000002, 0.1105, 0.10825, 0.11200000000000002, 0.1145, 0.11625, 0.11750000000000001, 0.119, 0.11925, 0.118, 0.11875, 0.11925, 0.12050000000000001, 0.12025, 0.11875, 0.12050000000000001, 0.12175, 0.12050000000000001, 0.11925, 0.11850000000000001, 0.12075, 0.12525, 0.12975, 0.128, 0.12625, 0.129, 0.12825, 0.12625, 0.1265, 0.127, 0.12925, 0.13, 0.12925, 0.1295, 0.126, 0.12825, 0.125, 0.124, 0.12375, 0.12275, 0.12350000000000001, 0.1255, 0.12525, 0.12525, 0.12425, 0.1255, 0.126, 0.12450000000000001, 0.12825, 0.1275, 0.12875, 0.13125, 0.13075, 0.1305, 0.1335, 0.13025, 0.12975, 0.13075, 0.1295, 0.1345, 0.13925, 0.135, 0.1345, 0.13374999999999998, 0.13425, 0.133, 0.1335, 0.1315, 0.13125, 0.1335, 0.13425, 0.13674999999999998, 0.13325, 0.1355, 0.13825, 0.13874999999999998, 0.13774999999999998, 0.13999999999999999, 0.13899999999999998, 0.14150000000000001, 0.14175, 0.13899999999999998, 0.1385, 0.14025, 0.13874999999999998, 0.1405, 0.13899999999999998, 0.13925, 0.1385, 0.13774999999999998, 0.1385, 0.144, 0.144, 0.14550000000000002, 0.14725, 0.14425, 0.14175, 0.14325000000000002, 0.14250000000000002, 0.147, 0.14425, 0.144, 0.146, 0.14375, 0.14625, 0.146, 0.14550000000000002, 0.14725, 0.14675, 0.14625, 0.147, 0.14850000000000002, 0.14650000000000002, 0.14450000000000002, 0.141, 0.13999999999999999, 0.1365, 0.13725, 0.14650000000000002, 0.15725]
        queuing_andel_3boder = [0.027000000000000003, 0.026333333333333334, 0.025333333333333333, 0.025, 0.024333333333333332, 0.025, 0.026333333333333334, 0.025666666666666667, 0.025666666666666667, 0.02666666666666667, 0.02733333333333333, 0.028333333333333332, 0.027000000000000003, 0.026000000000000002, 0.02666666666666667, 0.02666666666666667, 0.026000000000000002, 0.027000000000000003, 0.027666666666666666, 0.026333333333333334, 0.02666666666666667, 0.028666666666666667, 0.029333333333333333, 0.028, 0.026333333333333334, 0.02733333333333333, 0.027666666666666666, 0.02666666666666667, 0.028333333333333332, 0.027666666666666666, 0.026333333333333334, 0.026000000000000002, 0.025666666666666667, 0.025666666666666667, 0.026000000000000002, 0.02733333333333333, 0.027666666666666666, 0.027000000000000003, 0.029333333333333333, 0.028666666666666667, 0.028666666666666667, 0.028333333333333332, 0.026333333333333334, 0.026333333333333334, 0.026000000000000002, 0.027000000000000003, 0.027666666666666666, 0.025666666666666667, 0.028333333333333332, 0.03166666666666666, 0.032, 0.03233333333333333, 0.03266666666666666, 0.03333333333333333, 0.033, 0.03233333333333333, 0.034, 0.03333333333333333, 0.03333333333333333, 0.034, 0.035, 0.036333333333333336, 0.036000000000000004, 0.035333333333333335, 0.037333333333333336, 0.03766666666666666, 0.03833333333333333, 0.041, 0.042, 0.044333333333333336, 0.042333333333333334, 0.044333333333333336, 0.04633333333333333, 0.046, 0.04733333333333333, 0.050666666666666665, 0.051333333333333335, 0.051333333333333335, 0.049, 0.049, 0.048, 0.050666666666666665, 0.051333333333333335, 0.050666666666666665, 0.052333333333333336, 0.051000000000000004, 0.052000000000000005, 0.050666666666666665, 0.052000000000000005, 0.05333333333333334, 0.05266666666666667, 0.052333333333333336, 0.052333333333333336, 0.05333333333333334, 0.057, 0.059666666666666666, 0.060000000000000005, 0.06066666666666667, 0.060333333333333336, 0.060000000000000005, 0.059333333333333335, 0.061000000000000006, 0.06266666666666666, 0.062000000000000006, 0.06066666666666667, 0.06266666666666666, 0.06166666666666667, 0.064, 0.06433333333333333, 0.06533333333333333, 0.06333333333333332, 0.063, 0.06433333333333333, 0.065, 0.06533333333333333, 0.06966666666666667, 0.068, 0.06533333333333333, 0.065, 0.06366666666666666, 0.06633333333333333, 0.064, 0.06533333333333333, 0.06566666666666666, 0.06466666666666666, 0.06899999999999999, 0.066, 0.06666666666666667, 0.06833333333333333, 0.066, 0.07, 0.071, 0.07333333333333333, 0.07333333333333333, 0.07466666666666667, 0.07366666666666667, 0.07400000000000001, 0.07133333333333333, 0.07266666666666667, 0.07200000000000001, 0.071, 0.06899999999999999, 0.06366666666666666, 0.06433333333333333, 0.06566666666666666, 0.06466666666666666, 0.065, 0.06433333333333333, 0.06833333333333333, 0.06766666666666667, 0.06866666666666667, 0.06966666666666667, 0.06733333333333333, 0.06899999999999999, 0.07166666666666667, 0.07333333333333333, 0.076, 0.076, 0.07766666666666668, 0.077, 0.07333333333333333, 0.07333333333333333, 0.073, 0.07266666666666667, 0.07400000000000001, 0.073, 0.071, 0.07233333333333333, 0.07166666666666667, 0.07133333333333333, 0.07166666666666667, 0.07033333333333333, 0.07366666666666667, 0.075, 0.076, 0.075, 0.078, 0.07966666666666668, 0.08, 0.07933333333333333, 0.07566666666666667, 0.078, 0.07733333333333332, 0.077, 0.079, 0.07966666666666668, 0.07933333333333333, 0.07966666666666668, 0.07766666666666668, 0.07666666666666666, 0.07433333333333333, 0.07833333333333334, 0.07666666666666666, 0.081, 0.08166666666666668, 0.08066666666666666, 0.08266666666666667, 0.082, 0.08433333333333333, 0.08366666666666665, 0.08600000000000001, 0.08833333333333333, 0.08466666666666667, 0.08333333333333333, 0.082, 0.08233333333333334, 0.08233333333333334, 0.08366666666666665, 0.08499999999999999, 0.084, 0.08766666666666666, 0.09133333333333334, 0.09133333333333334, 0.09233333333333334, 0.09066666666666667, 0.095, 0.09766666666666667, 0.1, 0.09833333333333334, 0.09766666666666667, 0.09633333333333334, 0.09633333333333334, 0.09866666666666667, 0.09866666666666667, 0.09833333333333334, 0.10033333333333333, 0.09833333333333334, 0.09833333333333334, 0.096, 0.094, 0.09333333333333332, 0.08833333333333333, 0.08933333333333333, 0.089, 0.09733333333333333, 0.098, 0.09966666666666667, 0.09866666666666667, 0.098, 0.09633333333333334, 0.09633333333333334, 0.09666666666666666, 0.09833333333333334, 0.10033333333333333, 0.10233333333333333, 0.10400000000000001, 0.10633333333333334, 0.10566666666666666, 0.10366666666666666, 0.10766666666666666, 0.11033333333333334, 0.115, 0.11233333333333334, 0.11466666666666667, 0.114, 0.11566666666666667, 0.11366666666666667, 0.114, 0.115, 0.11466666666666667, 0.11366666666666667, 0.11333333333333333, 0.11333333333333333, 0.11533333333333333, 0.11666666666666667, 0.11633333333333334, 0.12033333333333333, 0.121, 0.11833333333333333, 0.12166666666666666, 0.12033333333333333, 0.11566666666666667, 0.11766666666666666, 0.11533333333333333, 0.11566666666666667, 0.11633333333333334, 0.119, 0.11733333333333333, 0.11866666666666667, 0.12333333333333334, 0.12266666666666667, 0.121, 0.12033333333333333, 0.12266666666666667, 0.12466666666666668, 0.125, 0.12333333333333334, 0.12366666666666666, 0.121, 0.11800000000000001, 0.11566666666666667, 0.11933333333333333, 0.12266666666666667, 0.12266666666666667, 0.123, 0.11866666666666667, 0.116, 0.11633333333333334, 0.12033333333333333, 0.12233333333333334, 0.12533333333333332, 0.123, 0.12366666666666666, 0.123, 0.12166666666666666, 0.12200000000000001, 0.12166666666666666, 0.119, 0.12033333333333333, 0.125, 0.12333333333333334, 0.11966666666666666, 0.12000000000000001, 0.11933333333333333, 0.11933333333333333, 0.11933333333333333, 0.121, 0.121, 0.12433333333333334, 0.12366666666666666, 0.12833333333333333, 0.13, 0.12966666666666668, 0.129, 0.132, 0.133, 0.13266666666666665, 0.13333333333333333, 0.13233333333333333, 0.131, 0.12933333333333333, 0.128, 0.133, 0.13566666666666669, 0.13266666666666665, 0.13133333333333333, 0.13066666666666665, 0.12866666666666665, 0.12933333333333333, 0.13066666666666665, 0.13066666666666665, 0.12766666666666668, 0.12733333333333333, 0.12666666666666665, 0.12466666666666668, 0.126, 0.12866666666666665, 0.12833333333333333, 0.12633333333333333, 0.127, 0.128, 0.13399999999999998, 0.133, 0.13166666666666668, 0.12833333333333333, 0.129, 0.12666666666666665, 0.13333333333333333, 0.13433333333333333, 0.133, 0.13166666666666668, 0.13266666666666665, 0.13266666666666665, 0.13466666666666666, 0.13766666666666666, 0.13566666666666669, 0.13233333333333333, 0.13366666666666666, 0.13533333333333333, 0.14, 0.142, 0.14433333333333334, 0.14433333333333334, 0.14733333333333334, 0.14800000000000002, 0.149, 0.15233333333333335, 0.15266666666666667, 0.15266666666666667, 0.15366666666666667, 0.153, 0.155, 0.153, 0.15166666666666667, 0.153, 0.15433333333333332, 0.15766666666666668, 0.15566666666666668, 0.15266666666666667, 0.15133333333333335, 0.15266666666666667, 0.154, 0.15733333333333333, 0.15899999999999997, 0.16233333333333333, 0.16133333333333333, 0.158, 0.158, 0.15833333333333333, 0.157, 0.15633333333333335, 0.16133333333333333, 0.164, 0.16266666666666665, 0.16366666666666668, 0.162, 0.169, 0.17099999999999999, 0.16866666666666666, 0.16966666666666666, 0.16966666666666666, 0.16966666666666666, 0.16966666666666666, 0.16933333333333334, 0.166, 0.1673333333333333, 0.16766666666666669, 0.16633333333333333, 0.16666666666666666, 0.165, 0.16566666666666666, 0.16166666666666665, 0.16266666666666665, 0.165, 0.16266666666666665, 0.15766666666666668, 0.15666666666666668, 0.16066666666666668, 0.164, 0.16699999999999998, 0.17066666666666666, 0.17099999999999999, 0.1673333333333333, 0.168, 0.17300000000000001, 0.1753333333333333, 0.17633333333333334, 0.17666666666666667, 0.17966666666666667, 0.179, 0.17933333333333332, 0.178, 0.17466666666666666, 0.17266666666666666, 0.17333333333333334, 0.17733333333333334, 0.18133333333333335, 0.1753333333333333, 0.17633333333333334, 0.17366666666666666, 0.17266666666666666, 0.17066666666666666, 0.175, 0.17766666666666667, 0.17766666666666667, 0.18066666666666667, 0.178, 0.179, 0.179, 0.18133333333333335, 0.177, 0.18033333333333335, 0.18166666666666667, 0.181, 0.18133333333333335, 0.17733333333333334, 0.17633333333333334, 0.1753333333333333, 0.17433333333333334, 0.17300000000000001, 0.17066666666666666, 0.16933333333333334, 0.165, 0.16299999999999998, 0.16533333333333333, 0.16566666666666666, 0.164, 0.16566666666666666, 0.1673333333333333, 0.16766666666666669, 0.17200000000000001, 0.17099999999999999, 0.177, 0.175, 0.174, 0.175, 0.177, 0.181, 0.18066666666666667, 0.17666666666666667, 0.17566666666666667, 0.18000000000000002, 0.185, 0.18366666666666667, 0.181, 0.185, 0.18366666666666667, 0.18466666666666667, 0.188, 0.192, 0.19433333333333333, 0.19233333333333333, 0.18933333333333333, 0.192, 0.19133333333333333, 0.192, 0.209, 0.218]
        queuing_andel_2boder = [0.052000000000000005, 0.051500000000000004, 0.0505, 0.0495, 0.049, 0.0455, 0.041999999999999996, 0.04, 0.039, 0.0405, 0.04, 0.0435, 0.040999999999999995, 0.0405, 0.041999999999999996, 0.043, 0.041499999999999995, 0.0445, 0.0465, 0.045, 0.0445, 0.046, 0.045, 0.046, 0.0475, 0.0465, 0.0465, 0.0435, 0.0465, 0.0445, 0.0465, 0.044, 0.0445, 0.047, 0.046, 0.0455, 0.044, 0.041499999999999995, 0.0405, 0.042499999999999996, 0.040999999999999995, 0.04, 0.0405, 0.040999999999999995, 0.039, 0.041499999999999995, 0.0445, 0.045, 0.0445, 0.043, 0.046, 0.0495, 0.052500000000000005, 0.052000000000000005, 0.054000000000000006, 0.056499999999999995, 0.058499999999999996, 0.056999999999999995, 0.0595, 0.059, 0.0615, 0.0615, 0.058499999999999996, 0.059, 0.056999999999999995, 0.05550000000000001, 0.05550000000000001, 0.05500000000000001, 0.054000000000000006, 0.056499999999999995, 0.054000000000000006, 0.052500000000000005, 0.053000000000000005, 0.054000000000000006, 0.053500000000000006, 0.057499999999999996, 0.057999999999999996, 0.063, 0.0635, 0.067, 0.06949999999999999, 0.068, 0.06899999999999999, 0.068, 0.066, 0.064, 0.0685, 0.067, 0.06899999999999999, 0.065, 0.0665, 0.0665, 0.06949999999999999, 0.0705, 0.0685, 0.071, 0.06999999999999999, 0.073, 0.073, 0.0705, 0.0685, 0.0725, 0.072, 0.074, 0.079, 0.08249999999999999, 0.0865, 0.089, 0.0935, 0.0945, 0.0965, 0.0995, 0.10300000000000001, 0.10400000000000001, 0.1055, 0.101, 0.0995, 0.1025, 0.10300000000000001, 0.10500000000000001, 0.1065, 0.1035, 0.101, 0.1, 0.1025, 0.10500000000000001, 0.1075, 0.10600000000000001, 0.1075, 0.1105, 0.1155, 0.1155, 0.1165, 0.11750000000000001, 0.11399999999999999, 0.1155, 0.11950000000000001, 0.12050000000000001, 0.12050000000000001, 0.125, 0.11850000000000001, 0.11699999999999999, 0.1165, 0.1145, 0.11599999999999999, 0.1165, 0.1165, 0.11950000000000001, 0.11850000000000001, 0.1165, 0.11699999999999999, 0.11599999999999999, 0.118, 0.11750000000000001, 0.119, 0.12250000000000001, 0.12150000000000001, 0.11699999999999999, 0.11499999999999999, 0.1145, 0.11399999999999999, 0.11100000000000002, 0.10600000000000001, 0.1045, 0.10400000000000001, 0.10800000000000001, 0.11499999999999999, 0.1125, 0.11399999999999999, 0.1155, 0.118, 0.12250000000000001, 0.12350000000000001, 0.12450000000000001, 0.12250000000000001, 0.119, 0.125, 0.12350000000000001, 0.12450000000000001, 0.1315, 0.127, 0.121, 0.121, 0.1165, 0.11699999999999999, 0.1145, 0.1155, 0.11599999999999999, 0.1125, 0.1125, 0.10900000000000001, 0.11000000000000001, 0.10900000000000001, 0.11000000000000001, 0.11000000000000001, 0.11100000000000002, 0.11399999999999999, 0.1135, 0.11399999999999999, 0.12, 0.121, 0.1275, 0.124, 0.125, 0.12150000000000001, 0.125, 0.1265, 0.13, 0.132, 0.1385, 0.137, 0.14350000000000002, 0.14650000000000002, 0.14950000000000002, 0.152, 0.151, 0.155, 0.161, 0.16699999999999998, 0.16599999999999998, 0.16499999999999998, 0.1635, 0.16399999999999998, 0.1615, 0.1565, 0.161, 0.1575, 0.157, 0.1565, 0.1515, 0.157, 0.16, 0.159, 0.157, 0.159, 0.1565, 0.1615, 0.1565, 0.16, 0.16299999999999998, 0.16599999999999998, 0.1585, 0.1565, 0.156, 0.161, 0.1625, 0.16699999999999998, 0.161, 0.16699999999999998, 0.16299999999999998, 0.1625, 0.16299999999999998, 0.16399999999999998, 0.16899999999999998, 0.16699999999999998, 0.173, 0.172, 0.177, 0.1795, 0.1805, 0.179, 0.1845, 0.1825, 0.179, 0.1775, 0.176, 0.1795, 0.1805, 0.1855, 0.177, 0.1835, 0.181, 0.186, 0.1875, 0.189, 0.1895, 0.184, 0.182, 0.189, 0.189, 0.191, 0.1885, 0.1935, 0.195, 0.1955, 0.1965, 0.1995, 0.198, 0.20099999999999998, 0.196, 0.19, 0.1955, 0.1945, 0.198, 0.1975, 0.1985, 0.198, 0.19, 0.1905, 0.186, 0.19, 0.191, 0.186, 0.188, 0.1875, 0.1845, 0.184, 0.1805, 0.1815, 0.186, 0.1815, 0.181, 0.1835, 0.182, 0.1835, 0.179, 0.1805, 0.185, 0.185, 0.1865, 0.191, 0.195, 0.1895, 0.1935, 0.191, 0.1995, 0.1925, 0.195, 0.1995, 0.1975, 0.1995, 0.202, 0.1975, 0.205, 0.20249999999999999, 0.20249999999999999, 0.20299999999999999, 0.2085, 0.211, 0.2085, 0.205, 0.20950000000000002, 0.2015, 0.1995, 0.198, 0.1995, 0.2, 0.20249999999999999, 0.20249999999999999, 0.20350000000000001, 0.207, 0.2105, 0.213, 0.21000000000000002, 0.21150000000000002, 0.213, 0.2085, 0.21349999999999997, 0.217, 0.22349999999999998, 0.22749999999999998, 0.2305, 0.2305, 0.2285, 0.23500000000000001, 0.2355, 0.23900000000000002, 0.2445, 0.24700000000000003, 0.2455, 0.2425, 0.24300000000000002, 0.2385, 0.2385, 0.22949999999999998, 0.22749999999999998, 0.229, 0.231, 0.22599999999999998, 0.231, 0.22999999999999998, 0.2325, 0.2325, 0.23450000000000001, 0.23450000000000001, 0.23700000000000002, 0.24, 0.2385, 0.2395, 0.2425, 0.244, 0.236, 0.23900000000000002, 0.23349999999999999, 0.23900000000000002, 0.2515, 0.2515, 0.2495, 0.24500000000000002, 0.2445, 0.2515, 0.2595, 0.261, 0.2495, 0.2455, 0.248, 0.258, 0.2575, 0.2495, 0.25, 0.253, 0.2585, 0.2615, 0.26549999999999996, 0.26749999999999996, 0.266, 0.271, 0.266, 0.265, 0.2665, 0.269, 0.27349999999999997, 0.277, 0.27799999999999997, 0.27349999999999997, 0.27349999999999997, 0.2705, 0.2685, 0.277, 0.273, 0.2645, 0.275, 0.279, 0.2745, 0.27349999999999997, 0.273, 0.268, 0.27349999999999997, 0.27149999999999996, 0.274, 0.27599999999999997, 0.269, 0.27149999999999996, 0.274, 0.27549999999999997, 0.27749999999999997, 0.279, 0.2765, 0.27549999999999997, 0.2705, 0.2725, 0.279, 0.275, 0.27799999999999997, 0.27549999999999997, 0.27799999999999997, 0.27, 0.2725, 0.27349999999999997, 0.2745, 0.27799999999999997, 0.2785, 0.2805, 0.27549999999999997, 0.2765, 0.2815, 0.2895, 0.2905, 0.2895, 0.28500000000000003, 0.29, 0.28250000000000003, 0.27999999999999997, 0.2815, 0.282, 0.2885, 0.288, 0.28700000000000003, 0.28700000000000003, 0.2905, 0.284, 0.28900000000000003, 0.2875, 0.2915, 0.29, 0.2925, 0.2855, 0.28300000000000003, 0.2855, 0.288, 0.28700000000000003, 0.2885, 0.28650000000000003, 0.2875, 0.2875, 0.29100000000000004, 0.29, 0.29500000000000004, 0.28900000000000003, 0.29100000000000004, 0.2875, 0.2975, 0.29700000000000004, 0.303, 0.3075, 0.3005, 0.339, 0.3585]
        queuing_andel_1bod = [0.061, 0.062, 0.065, 0.065, 0.062, 0.061, 0.066, 0.061, 0.064, 0.066, 0.068, 0.06899999999999999, 0.067, 0.063, 0.064, 0.065, 0.064, 0.061, 0.062, 0.062, 0.06, 0.057999999999999996, 0.065, 0.063, 0.06, 0.057999999999999996, 0.062, 0.063, 0.062, 0.057999999999999996, 0.06, 0.064, 0.063, 0.066, 0.065, 0.068, 0.06899999999999999, 0.079, 0.077, 0.081, 0.073, 0.073, 0.076, 0.071, 0.06999999999999999, 0.068, 0.06899999999999999, 0.071, 0.078, 0.08199999999999999, 0.08399999999999999, 0.08199999999999999, 0.08499999999999999, 0.089, 0.092, 0.093, 0.097, 0.10400000000000001, 0.10200000000000001, 0.10700000000000001, 0.11200000000000002, 0.11200000000000002, 0.10700000000000001, 0.10500000000000001, 0.10600000000000001, 0.11200000000000002, 0.11100000000000002, 0.11100000000000002, 0.11000000000000001, 0.118, 0.11599999999999999, 0.11200000000000002, 0.11299999999999999, 0.10900000000000001, 0.10500000000000001, 0.10600000000000001, 0.11100000000000002, 0.11499999999999999, 0.11499999999999999, 0.123, 0.121, 0.121, 0.123, 0.12, 0.126, 0.123, 0.12, 0.11499999999999999, 0.11399999999999999, 0.11599999999999999, 0.11299999999999999, 0.10900000000000001, 0.11499999999999999, 0.11000000000000001, 0.11000000000000001, 0.11200000000000002, 0.10900000000000001, 0.10800000000000001, 0.10900000000000001, 0.11599999999999999, 0.118, 0.124, 0.13, 0.134, 0.132, 0.136, 0.137, 0.135, 0.134, 0.13999999999999999, 0.142, 0.15, 0.152, 0.155, 0.155, 0.159, 0.157, 0.16399999999999998, 0.16499999999999998, 0.158, 0.158, 0.159, 0.16599999999999998, 0.156, 0.153, 0.148, 0.15, 0.155, 0.148, 0.152, 0.16, 0.16799999999999998, 0.16699999999999998, 0.16999999999999998, 0.16899999999999998, 0.174, 0.16999999999999998, 0.17099999999999999, 0.172, 0.16799999999999998, 0.172, 0.177, 0.174, 0.172, 0.183, 0.188, 0.189, 0.192, 0.198, 0.20600000000000002, 0.205, 0.20800000000000002, 0.20600000000000002, 0.199, 0.196, 0.202, 0.2, 0.20800000000000002, 0.217, 0.209, 0.21000000000000002, 0.21400000000000002, 0.217, 0.22000000000000003, 0.22200000000000003, 0.223, 0.22200000000000003, 0.225, 0.225, 0.21400000000000002, 0.21200000000000002, 0.211, 0.20299999999999999, 0.199, 0.202, 0.19, 0.193, 0.19, 0.196, 0.2, 0.20400000000000001, 0.209, 0.21400000000000002, 0.21800000000000003, 0.22400000000000003, 0.22200000000000003, 0.231, 0.24, 0.246, 0.244, 0.24100000000000002, 0.233, 0.23500000000000001, 0.24, 0.223, 0.22000000000000003, 0.229, 0.225, 0.223, 0.23399999999999999, 0.238, 0.229, 0.22799999999999998, 0.231, 0.23399999999999999, 0.231, 0.22999999999999998, 0.236, 0.24700000000000003, 0.24900000000000003, 0.24700000000000003, 0.24900000000000003, 0.253, 0.248, 0.25, 0.248, 0.24, 0.242, 0.24100000000000002, 0.23399999999999999, 0.23700000000000002, 0.24500000000000002, 0.24100000000000002, 0.252, 0.26, 0.257, 0.257, 0.256, 0.262, 0.262, 0.265, 0.264, 0.256, 0.244, 0.24700000000000003, 0.252, 0.254, 0.261, 0.273, 0.274, 0.282, 0.281, 0.28900000000000003, 0.284, 0.28900000000000003, 0.298, 0.306, 0.306, 0.304, 0.29500000000000004, 0.286, 0.282, 0.29100000000000004, 0.29, 0.28700000000000003, 0.288, 0.286, 0.29100000000000004, 0.28900000000000003, 0.29700000000000004, 0.294, 0.301, 0.29900000000000004, 0.308, 0.31, 0.318, 0.311, 0.302, 0.316, 0.315, 0.315, 0.307, 0.305, 0.311, 0.303, 0.316, 0.325, 0.33399999999999996, 0.324, 0.319, 0.333, 0.33999999999999997, 0.333, 0.33999999999999997, 0.33999999999999997, 0.34700000000000003, 0.34199999999999997, 0.331, 0.33599999999999997, 0.33599999999999997, 0.333, 0.335, 0.333, 0.325, 0.321, 0.318, 0.31, 0.322, 0.323, 0.327, 0.32799999999999996, 0.327, 0.324, 0.32599999999999996, 0.33199999999999996, 0.331, 0.33799999999999997, 0.343, 0.352, 0.358, 0.354, 0.36, 0.35, 0.361, 0.34900000000000003, 0.359, 0.352, 0.368, 0.364, 0.367, 0.362, 0.358, 0.357, 0.355, 0.364, 0.353, 0.348, 0.34500000000000003, 0.366, 0.368, 0.356, 0.367, 0.379, 0.387, 0.384, 0.379, 0.378, 0.391, 0.385, 0.39, 0.378, 0.375, 0.386, 0.381, 0.391, 0.396, 0.384, 0.393, 0.395, 0.40099999999999997, 0.398, 0.388, 0.395, 0.397, 0.397, 0.398, 0.396, 0.40199999999999997, 0.393, 0.391, 0.388, 0.385, 0.394, 0.383, 0.385, 0.374, 0.367, 0.377, 0.39, 0.398, 0.41500000000000004, 0.413, 0.41200000000000003, 0.403, 0.41, 0.414, 0.42300000000000004, 0.421, 0.43099999999999994, 0.43200000000000005, 0.42300000000000004, 0.426, 0.42800000000000005, 0.42300000000000004, 0.422, 0.438, 0.434, 0.438, 0.43899999999999995, 0.429, 0.43099999999999994, 0.437, 0.44299999999999995, 0.43600000000000005, 0.43899999999999995, 0.438, 0.44299999999999995, 0.44299999999999995, 0.44699999999999995, 0.433, 0.421, 0.42300000000000004, 0.42300000000000004, 0.422, 0.43, 0.429, 0.425, 0.434, 0.441, 0.44699999999999995, 0.45199999999999996, 0.445, 0.458, 0.45199999999999996, 0.45, 0.445, 0.43099999999999994, 0.42800000000000005, 0.421, 0.40800000000000003, 0.422, 0.43899999999999995, 0.445, 0.44800000000000006, 0.465, 0.46699999999999997, 0.46699999999999997, 0.48200000000000004, 0.488, 0.488, 0.489, 0.476, 0.46399999999999997, 0.46699999999999997, 0.46699999999999997, 0.46699999999999997, 0.46399999999999997, 0.45899999999999996, 0.454, 0.45, 0.44699999999999995, 0.45099999999999996, 0.45599999999999996, 0.445, 0.45599999999999996, 0.446, 0.44699999999999995, 0.45499999999999996, 0.461, 0.46799999999999997, 0.489, 0.479, 0.477, 0.479, 0.47300000000000003, 0.466, 0.46299999999999997, 0.46299999999999997, 0.45599999999999996, 0.45999999999999996, 0.457, 0.44800000000000006, 0.45499999999999996, 0.47000000000000003, 0.46699999999999997, 0.479, 0.477, 0.47400000000000003, 0.481, 0.471, 0.47300000000000003, 0.48600000000000004, 0.48, 0.471, 0.481, 0.489, 0.499, 0.508, 0.511, 0.508, 0.51, 0.49400000000000005, 0.496, 0.504, 0.503, 0.501, 0.513, 0.514, 0.518, 0.512, 0.526, 0.526, 0.532, 0.536, 0.54, 0.5429999999999999, 0.5349999999999999, 0.526, 0.525, 0.532, 0.522, 0.528, 0.521, 0.528, 0.5269999999999999, 0.524, 0.588, 0.642]
       # print(np.mean(queuing_andel_4boder),np.mean(queuing_andel_3boder),np.mean(queuing_andel_2boder),np.mean(queuing_andel_1bod))
        #print(np.std(queuing_andel_4boder),np.std(queuing_andel_3boder),np.std(queuing_andel_2boder),np.std(queuing_andel_1bod))
        busy_andel_4boder = [0.04, 0.03, 0.03, 0.02375, 0.01875, 0.02, 0.01625, 0.02375, 0.02625, 0.0225, 0.0225, 0.02125, 0.01625, 0.01875, 0.02375, 0.0225, 0.0225, 0.01875, 0.02125, 0.01875, 0.01625, 0.02, 0.01875, 0.01875, 0.015, 0.01625, 0.0225, 0.02375, 0.01875, 0.02, 0.01625, 0.0225, 0.02375, 0.02625, 0.0275, 0.02375, 0.0225, 0.0275, 0.03375, 0.035, 0.035, 0.03625, 0.0325, 0.02375, 0.0225, 0.01875, 0.02375, 0.03, 0.02875, 0.03125, 0.02625, 0.02875, 0.03625, 0.03875, 0.04375, 0.03625, 0.04, 0.035, 0.04, 0.03625, 0.03625, 0.035, 0.0425, 0.045, 0.05625, 0.0575, 0.06, 0.0625, 0.0525, 0.05875, 0.06, 0.05625, 0.0525, 0.06, 0.065, 0.055, 0.06625, 0.0675, 0.07, 0.06125, 0.055, 0.06, 0.05375, 0.05625, 0.05125, 0.05625, 0.06, 0.06375, 0.06, 0.05375, 0.05875, 0.065, 0.0575, 0.06, 0.06, 0.06375, 0.0675, 0.06625, 0.07, 0.0725, 0.06375, 0.06, 0.06875, 0.08, 0.08625, 0.08375, 0.08375, 0.07625, 0.06375, 0.0575, 0.06375, 0.0725, 0.07, 0.07625, 0.075, 0.085, 0.075, 0.08625, 0.07875, 0.075, 0.06625, 0.07125, 0.07, 0.06875, 0.06625, 0.06125, 0.065, 0.07, 0.0675, 0.0725, 0.0675, 0.0725, 0.07, 0.06875, 0.06875, 0.06875, 0.0725, 0.0825, 0.07875, 0.08875, 0.075, 0.07, 0.07625, 0.075, 0.07375, 0.065, 0.06875, 0.08, 0.07875, 0.07375, 0.08125, 0.06625, 0.0825, 0.08625, 0.09125, 0.09, 0.08375, 0.0875, 0.08375, 0.08875, 0.0925, 0.085, 0.08875, 0.085, 0.0875, 0.0875, 0.08875, 0.0925, 0.08875, 0.0875, 0.08875, 0.0875, 0.0825, 0.075, 0.08875, 0.0925, 0.09625, 0.10125, 0.09375, 0.08, 0.08375, 0.0875, 0.09625, 0.0925, 0.095, 0.0925, 0.0825, 0.08875, 0.07625, 0.085, 0.1, 0.09625, 0.10875, 0.1, 0.09375, 0.085, 0.08625, 0.07375, 0.07875, 0.085, 0.09375, 0.09, 0.0825, 0.10125, 0.0925, 0.08, 0.08125, 0.08, 0.0775, 0.09125, 0.09625, 0.09625, 0.10875, 0.10125, 0.10375, 0.09875, 0.1075, 0.10875, 0.1175, 0.1075, 0.1075, 0.09625, 0.1125, 0.11, 0.10375, 0.10375, 0.11375, 0.1, 0.10625, 0.1225, 0.1175, 0.1175, 0.11375, 0.11625, 0.12625, 0.11625, 0.11375, 0.10875, 0.11625, 0.1225, 0.12375, 0.12375, 0.1175, 0.12375, 0.1275, 0.12625, 0.11375, 0.11, 0.12, 0.1075, 0.1175, 0.1125, 0.1225, 0.13375, 0.125, 0.12125, 0.11375, 0.10125, 0.1125, 0.1125, 0.10875, 0.10875, 0.11125, 0.12, 0.12, 0.13375, 0.12375, 0.1075, 0.125, 0.11625, 0.12625, 0.13125, 0.12625, 0.12875, 0.1275, 0.1275, 0.12125, 0.12125, 0.12375, 0.115, 0.12125, 0.12625, 0.13, 0.1275, 0.13375, 0.12625, 0.12625, 0.12125, 0.13, 0.12125, 0.1325, 0.1125, 0.13375, 0.13625, 0.145, 0.1375, 0.125, 0.11875, 0.10875, 0.11625, 0.12375, 0.12, 0.11625, 0.12, 0.1225, 0.1375, 0.1325, 0.13, 0.12875, 0.11875, 0.1175, 0.105, 0.10875, 0.12125, 0.1325, 0.13375, 0.1425, 0.14, 0.15, 0.135, 0.13, 0.12875, 0.13625, 0.1275, 0.13625, 0.1325, 0.13125, 0.1475, 0.1525, 0.15125, 0.14875, 0.135, 0.125, 0.1225, 0.12625, 0.14, 0.1475, 0.13, 0.145, 0.13375, 0.1425, 0.15, 0.14125, 0.15375, 0.1625, 0.155, 0.15, 0.16, 0.1725, 0.1625, 0.1475, 0.15125, 0.1575, 0.1775, 0.175, 0.17625, 0.16625, 0.16125, 0.17, 0.16, 0.15875, 0.15625, 0.16125, 0.14625, 0.14625, 0.155, 0.15375, 0.15375, 0.15, 0.1425, 0.15375, 0.1575, 0.16, 0.15625, 0.1575, 0.16125, 0.1525, 0.14125, 0.15375, 0.15875, 0.17, 0.1725, 0.175, 0.1625, 0.15, 0.1725, 0.1775, 0.175, 0.1625, 0.165, 0.15625, 0.17, 0.18125, 0.175, 0.17875, 0.1775, 0.17875, 0.18375, 0.16875, 0.17375, 0.16375, 0.17, 0.16125, 0.165, 0.17625, 0.1725, 0.16625, 0.16125, 0.16375, 0.1725, 0.17875, 0.17875, 0.1725, 0.1725, 0.17, 0.17, 0.165, 0.16625, 0.15125, 0.16625, 0.1675, 0.175, 0.1725, 0.1625, 0.17, 0.1725, 0.1825, 0.1875, 0.17875, 0.16625, 0.165, 0.16, 0.15375, 0.1675, 0.18125, 0.17375, 0.17625, 0.16125, 0.17125, 0.17, 0.17875, 0.18375, 0.1925, 0.1875, 0.185, 0.18125, 0.19375, 0.19375, 0.2025, 0.18625, 0.175, 0.18375, 0.18, 0.1775, 0.1775, 0.18375, 0.1825, 0.1925, 0.18875, 0.18875, 0.205, 0.20375, 0.21, 0.19125, 0.21, 0.21, 0.2075, 0.195, 0.18125, 0.20125, 0.2125, 0.2125, 0.2075, 0.1925, 0.2025, 0.21125, 0.20875, 0.2, 0.1975, 0.20625, 0.19625, 0.2, 0.2, 0.20375, 0.21375, 0.2175, 0.2125, 0.2075, 0.21875, 0.235, 0.21125, 0.20625, 0.20125, 0.21, 0.1925, 0.1875, 0.2075, 0.21, 0.21375, 0.21375, 0.21, 0.21375, 0.22, 0.2175, 0.2275, 0.22875, 0.22, 0.21125]
        busy_andel_3boder = [0.05333333333333334, 0.055, 0.05333333333333334, 0.051666666666666666, 0.03166666666666667, 0.03333333333333333, 0.03, 0.024999999999999998, 0.03333333333333333, 0.04, 0.04666666666666667, 0.045000000000000005, 0.043333333333333335, 0.03666666666666667, 0.03833333333333334, 0.03166666666666667, 0.034999999999999996, 0.03333333333333333, 0.03833333333333334, 0.03833333333333334, 0.034999999999999996, 0.034999999999999996, 0.034999999999999996, 0.03, 0.03333333333333333, 0.03333333333333333, 0.03666666666666667, 0.04, 0.041666666666666664, 0.04666666666666667, 0.043333333333333335, 0.04666666666666667, 0.05333333333333334, 0.049999999999999996, 0.051666666666666666, 0.049999999999999996, 0.04, 0.041666666666666664, 0.041666666666666664, 0.03666666666666667, 0.04833333333333333, 0.049999999999999996, 0.049999999999999996, 0.045000000000000005, 0.04666666666666667, 0.049999999999999996, 0.043333333333333335, 0.03333333333333333, 0.03833333333333334, 0.041666666666666664, 0.03666666666666667, 0.03666666666666667, 0.03666666666666667, 0.03166666666666667, 0.041666666666666664, 0.04666666666666667, 0.043333333333333335, 0.05333333333333334, 0.049999999999999996, 0.049999999999999996, 0.04666666666666667, 0.04, 0.045000000000000005, 0.04666666666666667, 0.051666666666666666, 0.051666666666666666, 0.05666666666666667, 0.051666666666666666, 0.04833333333333333, 0.04666666666666667, 0.05666666666666667, 0.065, 0.05833333333333333, 0.05666666666666667, 0.055, 0.06, 0.06166666666666667, 0.07166666666666667, 0.08333333333333333, 0.08666666666666667, 0.09000000000000001, 0.07666666666666667, 0.07666666666666667, 0.07666666666666667, 0.075, 0.06999999999999999, 0.07166666666666667, 0.07833333333333332, 0.06999999999999999, 0.07166666666666667, 0.075, 0.08, 0.07833333333333332, 0.06833333333333333, 0.07333333333333333, 0.07833333333333332, 0.08166666666666667, 0.08333333333333333, 0.07833333333333332, 0.09166666666666667, 0.07833333333333332, 0.08833333333333333, 0.085, 0.09333333333333334, 0.08833333333333333, 0.08666666666666667, 0.07833333333333332, 0.08166666666666667, 0.08333333333333333, 0.08166666666666667, 0.08333333333333333, 0.09000000000000001, 0.07833333333333332, 0.06333333333333334, 0.07666666666666667, 0.09166666666666667, 0.09333333333333334, 0.105, 0.11166666666666668, 0.10166666666666667, 0.10333333333333333, 0.12, 0.10333333333333333, 0.11, 0.09333333333333334, 0.10333333333333333, 0.10666666666666667, 0.11666666666666665, 0.11333333333333334, 0.09666666666666666, 0.085, 0.09333333333333334, 0.10166666666666667, 0.10666666666666667, 0.11666666666666665, 0.11333333333333334, 0.09999999999999999, 0.09833333333333333, 0.09499999999999999, 0.09666666666666666, 0.09000000000000001, 0.10166666666666667, 0.09999999999999999, 0.10166666666666667, 0.10333333333333333, 0.09999999999999999, 0.12333333333333334, 0.12166666666666666, 0.11, 0.09999999999999999, 0.10833333333333334, 0.11166666666666668, 0.11499999999999999, 0.12666666666666668, 0.105, 0.10666666666666667, 0.10666666666666667, 0.10833333333333334, 0.09333333333333334, 0.10333333333333333, 0.09833333333333333, 0.09833333333333333, 0.09833333333333333, 0.09000000000000001, 0.09333333333333334, 0.09666666666666666, 0.09666666666666666, 0.10166666666666667, 0.09000000000000001, 0.09499999999999999, 0.08833333333333333, 0.09166666666666667, 0.08666666666666667, 0.105, 0.11499999999999999, 0.10833333333333334, 0.10833333333333334, 0.11166666666666668, 0.11499999999999999, 0.10333333333333333, 0.11666666666666665, 0.11333333333333334, 0.11166666666666668, 0.11333333333333334, 0.11166666666666668, 0.13, 0.12166666666666666, 0.12833333333333333, 0.12833333333333333, 0.125, 0.12, 0.12166666666666666, 0.13166666666666668, 0.13666666666666666, 0.12666666666666668, 0.12333333333333334, 0.12166666666666666, 0.10833333333333334, 0.125, 0.12666666666666668, 0.11166666666666668, 0.105, 0.11166666666666668, 0.11833333333333333, 0.11833333333333333, 0.11666666666666665, 0.12, 0.12333333333333334, 0.12833333333333333, 0.11666666666666665, 0.12333333333333334, 0.125, 0.13833333333333334, 0.13166666666666668, 0.13833333333333334, 0.145, 0.15833333333333333, 0.14666666666666667, 0.14666666666666667, 0.14833333333333334, 0.14333333333333334, 0.155, 0.145, 0.13333333333333333, 0.12, 0.12, 0.13833333333333334, 0.14333333333333334, 0.14333333333333334, 0.14833333333333334, 0.15333333333333335, 0.14666666666666667, 0.15666666666666665, 0.16833333333333333, 0.155, 0.14166666666666666, 0.13333333333333333, 0.15, 0.13999999999999999, 0.155, 0.16666666666666666, 0.17333333333333334, 0.165, 0.16, 0.165, 0.15, 0.15333333333333335, 0.135, 0.135, 0.13999999999999999, 0.14166666666666666, 0.15833333333333333, 0.18000000000000002, 0.18999999999999997, 0.18000000000000002, 0.17166666666666666, 0.17166666666666666, 0.16833333333333333, 0.15166666666666667, 0.15666666666666665, 0.16166666666666665, 0.17500000000000002, 0.17166666666666666, 0.18000000000000002, 0.18166666666666667, 0.16666666666666666, 0.18000000000000002, 0.18000000000000002, 0.19333333333333333, 0.18833333333333332, 0.18166666666666667, 0.18166666666666667, 0.17, 0.17666666666666667, 0.17666666666666667, 0.18833333333333332, 0.17500000000000002, 0.17166666666666666, 0.16333333333333333, 0.14666666666666667, 0.15, 0.14166666666666666, 0.13166666666666668, 0.12166666666666666, 0.14333333333333334, 0.13166666666666668, 0.135, 0.15, 0.13999999999999999, 0.145, 0.155, 0.16, 0.17166666666666666, 0.17666666666666667, 0.17166666666666666, 0.16333333333333333, 0.16333333333333333, 0.17, 0.165, 0.18166666666666667, 0.17166666666666666, 0.18166666666666667, 0.18833333333333332, 0.17166666666666666, 0.16666666666666666, 0.17666666666666667, 0.17333333333333334, 0.16, 0.16833333333333333, 0.17833333333333334, 0.17333333333333334, 0.16666666666666666, 0.16166666666666665, 0.18666666666666668, 0.18666666666666668, 0.17500000000000002, 0.19666666666666666, 0.18833333333333332, 0.18333333333333335, 0.19833333333333333, 0.19166666666666665, 0.17833333333333334, 0.19499999999999998, 0.19333333333333333, 0.18500000000000003, 0.19999999999999998, 0.20333333333333334, 0.20166666666666666, 0.19499999999999998, 0.18666666666666668, 0.18833333333333332, 0.18166666666666667, 0.18833333333333332, 0.20333333333333334, 0.18999999999999997, 0.17, 0.17833333333333334, 0.19166666666666665, 0.19166666666666665, 0.19166666666666665, 0.18000000000000002, 0.19833333333333333, 0.18500000000000003, 0.18166666666666667, 0.19166666666666665, 0.18833333333333332, 0.20666666666666667, 0.18833333333333332, 0.19166666666666665, 0.19333333333333333, 0.18666666666666668, 0.18166666666666667, 0.19333333333333333, 0.18333333333333335, 0.17666666666666667, 0.17666666666666667, 0.18333333333333335, 0.19166666666666665, 0.19999999999999998, 0.19999999999999998, 0.20666666666666667, 0.21, 0.19833333333333333, 0.21, 0.19666666666666666, 0.18000000000000002, 0.18999999999999997, 0.21, 0.21333333333333335, 0.215, 0.21666666666666667, 0.21333333333333335, 0.21333333333333335, 0.20833333333333334, 0.20666666666666667, 0.19999999999999998, 0.19999999999999998, 0.205, 0.20666666666666667, 0.21333333333333335, 0.21833333333333335, 0.205, 0.19499999999999998, 0.19833333333333333, 0.215, 0.205, 0.22333333333333336, 0.21333333333333335, 0.215, 0.22666666666666668, 0.245, 0.24333333333333332, 0.225, 0.21166666666666667, 0.20833333333333334, 0.215, 0.23166666666666666, 0.24333333333333332, 0.23666666666666666, 0.235, 0.2333333333333333, 0.24, 0.245, 0.25666666666666665, 0.265, 0.26, 0.255, 0.23666666666666666, 0.24333333333333332, 0.21833333333333335, 0.22, 0.24, 0.25166666666666665, 0.23666666666666666, 0.235, 0.21833333333333335, 0.22333333333333336, 0.22333333333333336, 0.21833333333333335, 0.225, 0.215, 0.22666666666666668, 0.22999999999999998, 0.22999999999999998, 0.22666666666666668, 0.22333333333333336, 0.21166666666666667, 0.21166666666666667, 0.23166666666666666, 0.22333333333333336, 0.25, 0.25, 0.235, 0.24833333333333332, 0.24166666666666667, 0.25, 0.24333333333333332, 0.25, 0.22, 0.22999999999999998, 0.23666666666666666, 0.24166666666666667, 0.24166666666666667, 0.25166666666666665, 0.245, 0.225, 0.22333333333333336, 0.24166666666666667, 0.22666666666666668, 0.23666666666666666, 0.25, 0.25166666666666665, 0.24, 0.25666666666666665, 0.25, 0.26166666666666666, 0.26333333333333336, 0.25333333333333335, 0.25, 0.24833333333333332, 0.235, 0.24333333333333332, 0.25166666666666665, 0.24333333333333332, 0.27, 0.27, 0.2733333333333333, 0.2816666666666667, 0.2733333333333333, 0.27666666666666667, 0.2733333333333333, 0.27666666666666667, 0.2866666666666667, 0.2916666666666667, 0.26666666666666666, 0.27, 0.29, 0.285, 0.26333333333333336, 0.22999999999999998, 0.235, 0.25333333333333335, 0.25333333333333335, 0.26666666666666666, 0.25833333333333336, 0.23666666666666666, 0.24833333333333332, 0.24166666666666667, 0.245, 0.2733333333333333, 0.265, 0.26166666666666666, 0.24833333333333332, 0.25333333333333335, 0.26833333333333337, 0.2816666666666667, 0.26166666666666666, 0.24333333333333332, 0.2333333333333333, 0.24166666666666667, 0.235, 0.24333333333333332, 0.25333333333333335, 0.26833333333333337, 0.2783333333333333, 0.26833333333333337, 0.27166666666666667, 0.2783333333333333]
        busy_andel_2boder = [0.0775, 0.075, 0.065, 0.0625, 0.0575, 0.05, 0.0475, 0.0575, 0.0575, 0.0475, 0.05, 0.0575, 0.055, 0.06, 0.0525, 0.06, 0.0675, 0.06, 0.0625, 0.0675, 0.075, 0.085, 0.0775, 0.0675, 0.075, 0.08, 0.0875, 0.07, 0.07, 0.0825, 0.08, 0.08, 0.075, 0.0875, 0.085, 0.075, 0.065, 0.055, 0.0725, 0.085, 0.0775, 0.075, 0.09, 0.08, 0.08, 0.0875, 0.0975, 0.0875, 0.0775, 0.0775, 0.0775, 0.0775, 0.085, 0.0825, 0.0925, 0.0925, 0.095, 0.11, 0.1025, 0.085, 0.0725, 0.0675, 0.0675, 0.0725, 0.0975, 0.085, 0.1, 0.095, 0.0875, 0.08, 0.0925, 0.105, 0.1025, 0.0975, 0.09, 0.085, 0.09, 0.09, 0.0975, 0.1025, 0.0825, 0.075, 0.0725, 0.095, 0.105, 0.105, 0.12, 0.125, 0.125, 0.1375, 0.13, 0.125, 0.13, 0.1175, 0.12, 0.115, 0.105, 0.0975, 0.1125, 0.1125, 0.1, 0.0925, 0.1175, 0.135, 0.1275, 0.135, 0.13, 0.12, 0.1125, 0.1175, 0.1075, 0.1175, 0.1225, 0.1275, 0.12, 0.1225, 0.15, 0.1475, 0.145, 0.145, 0.145, 0.15, 0.155, 0.1575, 0.155, 0.14, 0.1425, 0.1325, 0.155, 0.1475, 0.1625, 0.1525, 0.1675, 0.18, 0.19, 0.1825, 0.1575, 0.17, 0.16, 0.1475, 0.1575, 0.1525, 0.16, 0.15, 0.1425, 0.1525, 0.1475, 0.165, 0.135, 0.1275, 0.1375, 0.1375, 0.14, 0.1575, 0.1575, 0.1725, 0.19, 0.185, 0.2, 0.205, 0.18, 0.1675, 0.1625, 0.15, 0.1775, 0.1775, 0.185, 0.17, 0.1725, 0.19, 0.1675, 0.16, 0.1625, 0.1575, 0.1675, 0.1825, 0.1775, 0.185, 0.17, 0.1775, 0.1625, 0.17, 0.18, 0.1675, 0.1675, 0.185, 0.19, 0.205, 0.2075, 0.2, 0.1975, 0.1975, 0.205, 0.195, 0.1675, 0.1775, 0.1925, 0.19, 0.1925, 0.1925, 0.2, 0.2075, 0.19, 0.195, 0.1925, 0.185, 0.205, 0.21, 0.22, 0.2125, 0.24, 0.215, 0.2125, 0.1925, 0.2, 0.2, 0.2175, 0.1975, 0.2275, 0.1975, 0.2025, 0.22, 0.2025, 0.2025, 0.19, 0.205, 0.18, 0.2025, 0.185, 0.185, 0.19, 0.195, 0.2225, 0.2275, 0.235, 0.2375, 0.2325, 0.2125, 0.2275, 0.225, 0.2575, 0.2475, 0.2325, 0.215, 0.215, 0.2175, 0.215, 0.2125, 0.22, 0.2075, 0.21, 0.18, 0.2075, 0.215, 0.2175, 0.2275, 0.225, 0.2425, 0.25, 0.2425, 0.255, 0.275, 0.2825, 0.2625, 0.2625, 0.25, 0.235, 0.2325, 0.2775, 0.26, 0.2175, 0.2375, 0.25, 0.2575, 0.25, 0.2525, 0.27, 0.265, 0.2575, 0.27, 0.2875, 0.2725, 0.2575, 0.225, 0.2625, 0.2975, 0.27, 0.275, 0.24, 0.2325, 0.255, 0.26, 0.255, 0.255, 0.235, 0.2325, 0.235, 0.255, 0.255, 0.28, 0.28, 0.285, 0.255, 0.2625, 0.2625, 0.3, 0.295, 0.2825, 0.2775, 0.2675, 0.26, 0.29, 0.3075, 0.31, 0.29, 0.2775, 0.28, 0.2925, 0.2825, 0.31, 0.3025, 0.295, 0.2975, 0.3075, 0.3125, 0.315, 0.2975, 0.2775, 0.2725, 0.28, 0.285, 0.25, 0.2525, 0.275, 0.29, 0.29, 0.27, 0.275, 0.28, 0.2875, 0.2725, 0.28, 0.2975, 0.305, 0.2975, 0.285, 0.285, 0.285, 0.285, 0.3, 0.31, 0.3175, 0.3025, 0.325, 0.3125, 0.31, 0.3175, 0.32, 0.315, 0.3475, 0.345, 0.33, 0.34, 0.345, 0.3475, 0.355, 0.3325, 0.3425, 0.33, 0.32, 0.3025, 0.3025, 0.315, 0.305, 0.335, 0.335, 0.34, 0.33, 0.33, 0.315, 0.32, 0.32, 0.3275, 0.3125, 0.31, 0.3175, 0.32, 0.315, 0.33, 0.305, 0.3225, 0.3275, 0.33, 0.3275, 0.35, 0.345, 0.3725, 0.34, 0.3725, 0.36, 0.355, 0.36, 0.385, 0.3625, 0.3775, 0.3675, 0.3825, 0.365, 0.3425, 0.345, 0.3625, 0.375, 0.38, 0.3625, 0.3825, 0.37, 0.3525, 0.36, 0.385, 0.375, 0.36, 0.35, 0.33, 0.3325, 0.325, 0.3325, 0.3625, 0.3775, 0.3575, 0.3625, 0.385, 0.3775, 0.4275, 0.4, 0.3775, 0.3725, 0.3525, 0.35, 0.345, 0.3525, 0.3275, 0.35, 0.3725, 0.3425, 0.34, 0.35, 0.39, 0.39, 0.37, 0.355, 0.355, 0.3725, 0.3875, 0.375, 0.3375, 0.355, 0.365, 0.3625, 0.3725, 0.3775, 0.385, 0.3725, 0.3575, 0.38, 0.365, 0.3825, 0.375, 0.3625, 0.3675, 0.365, 0.375, 0.3975, 0.415, 0.39, 0.3825, 0.3525, 0.365, 0.385, 0.4075, 0.4025, 0.3975, 0.4025, 0.3925, 0.3875, 0.41, 0.405, 0.4075, 0.4175, 0.44, 0.41, 0.4075, 0.39, 0.38, 0.365, 0.3575, 0.3975, 0.4025, 0.43, 0.4175, 0.395, 0.385, 0.3925, 0.395, 0.39, 0.3875, 0.4, 0.43, 0.42]
        busy_andel_1bod = [0.095, 0.095, 0.1, 0.095, 0.11, 0.105, 0.09, 0.085, 0.075, 0.08, 0.08, 0.085, 0.075, 0.085, 0.07, 0.065, 0.08, 0.09, 0.115, 0.115, 0.135, 0.115, 0.11, 0.08, 0.095, 0.095, 0.08, 0.085, 0.085, 0.07, 0.085, 0.095, 0.135, 0.155, 0.14, 0.14, 0.115, 0.09, 0.125, 0.11, 0.095, 0.13, 0.12, 0.11, 0.105, 0.125, 0.155, 0.145, 0.145, 0.155, 0.165, 0.13, 0.145, 0.155, 0.145, 0.135, 0.16, 0.145, 0.105, 0.135, 0.14, 0.12, 0.105, 0.15, 0.175, 0.165, 0.17, 0.145, 0.145, 0.13, 0.125, 0.13, 0.135, 0.15, 0.175, 0.165, 0.16, 0.16, 0.155, 0.17, 0.185, 0.185, 0.19, 0.2, 0.2, 0.205, 0.18, 0.165, 0.165, 0.165, 0.145, 0.15, 0.125, 0.16, 0.17, 0.205, 0.205, 0.23, 0.23, 0.215, 0.235, 0.215, 0.245, 0.21, 0.22, 0.205, 0.19, 0.205, 0.195, 0.235, 0.23, 0.24, 0.235, 0.26, 0.265, 0.225, 0.2, 0.225, 0.24, 0.275, 0.28, 0.24, 0.235, 0.245, 0.27, 0.255, 0.25, 0.265, 0.28, 0.28, 0.305, 0.29, 0.3, 0.27, 0.275, 0.225, 0.205, 0.24, 0.275, 0.27, 0.285, 0.3, 0.305, 0.32, 0.31, 0.305, 0.325, 0.31, 0.27, 0.31, 0.33, 0.315, 0.315, 0.29, 0.28, 0.295, 0.3, 0.305, 0.31, 0.305, 0.315, 0.275, 0.325, 0.3, 0.31, 0.305, 0.34, 0.37, 0.35, 0.345, 0.355, 0.305, 0.32, 0.355, 0.33, 0.31, 0.295, 0.265, 0.265, 0.33, 0.32, 0.305, 0.31, 0.305, 0.305, 0.285, 0.275, 0.315, 0.325, 0.315, 0.335, 0.285, 0.305, 0.37, 0.35, 0.34, 0.35, 0.32, 0.265, 0.31, 0.285, 0.32, 0.325, 0.33, 0.365, 0.39, 0.35, 0.335, 0.365, 0.355, 0.32, 0.355, 0.34, 0.35, 0.345, 0.385, 0.34, 0.355, 0.39, 0.36, 0.34, 0.3, 0.345, 0.37, 0.39, 0.395, 0.405, 0.39, 0.385, 0.38, 0.405, 0.38, 0.385, 0.34, 0.36, 0.355, 0.355, 0.39, 0.375, 0.37, 0.375, 0.385, 0.365, 0.365, 0.39, 0.415, 0.41, 0.415, 0.37, 0.425, 0.405, 0.385, 0.42, 0.39, 0.385, 0.41, 0.415, 0.425, 0.42, 0.45, 0.465, 0.465, 0.465, 0.44, 0.445, 0.465, 0.425, 0.425, 0.46, 0.455, 0.44, 0.46, 0.46, 0.5, 0.495, 0.435, 0.405, 0.45, 0.445, 0.425, 0.48, 0.49, 0.5, 0.495, 0.465, 0.48, 0.46, 0.45, 0.455, 0.455, 0.44, 0.47, 0.47, 0.475, 0.445, 0.5, 0.5, 0.49, 0.495, 0.495, 0.505, 0.48, 0.505, 0.505, 0.495, 0.515, 0.535, 0.52, 0.545, 0.54, 0.54, 0.56, 0.555, 0.54, 0.505, 0.52, 0.515, 0.495, 0.535, 0.535, 0.545, 0.535, 0.49, 0.535, 0.52, 0.545, 0.51, 0.475, 0.505, 0.455, 0.47, 0.435, 0.44, 0.46, 0.46, 0.48, 0.47, 0.475, 0.46, 0.45, 0.455, 0.475, 0.47, 0.525, 0.555, 0.495, 0.47, 0.555, 0.54, 0.51, 0.52, 0.5, 0.485, 0.51, 0.53, 0.555, 0.545, 0.485, 0.485, 0.46, 0.48, 0.515, 0.51, 0.49, 0.515, 0.525, 0.56, 0.57, 0.52, 0.565, 0.575, 0.595, 0.545, 0.53, 0.535, 0.515, 0.51, 0.535, 0.525, 0.53, 0.53, 0.54, 0.54, 0.555, 0.555, 0.575, 0.56, 0.545, 0.545, 0.535, 0.545, 0.595, 0.605, 0.615, 0.62, 0.65, 0.62, 0.62, 0.635, 0.64, 0.59, 0.615, 0.56, 0.565, 0.595, 0.585, 0.6, 0.615, 0.565, 0.58, 0.545, 0.535, 0.56, 0.555, 0.53, 0.55, 0.565, 0.57, 0.595, 0.595, 0.585, 0.59, 0.59, 0.59, 0.605, 0.625, 0.59, 0.61, 0.565, 0.63, 0.605, 0.62, 0.62, 0.56, 0.6, 0.665, 0.67, 0.615, 0.615, 0.67, 0.7, 0.7, 0.645, 0.61, 0.595, 0.6, 0.625, 0.62, 0.665, 0.64, 0.655, 0.665, 0.68, 0.65, 0.675, 0.69, 0.65, 0.62, 0.63, 0.66, 0.665, 0.65, 0.64, 0.685, 0.66, 0.65, 0.615, 0.65, 0.62, 0.65, 0.68, 0.68, 0.635, 0.625, 0.645, 0.665, 0.68, 0.645, 0.625, 0.66, 0.705, 0.705, 0.68, 0.675, 0.68, 0.695, 0.685, 0.68, 0.69, 0.69, 0.675, 0.665, 0.695, 0.65, 0.625, 0.66, 0.655, 0.66, 0.65, 0.645, 0.605, 0.63, 0.595, 0.625, 0.61, 0.61, 0.65, 0.66]
       # print(np.mean(busy_andel_4boder),np.mean(busy_andel_3boder),np.mean(busy_andel_2boder),np.mean(busy_andel_1bod))
       # print(np.std(busy_andel_4boder),np.std(busy_andel_3boder),np.std(busy_andel_2boder),np.std(busy_andel_1bod))

        transactions_4boder = [0.22, 0.28, 0.42, 0.48, 0.62, 0.72, 0.8, 0.88, 0.9, 1.02, 1.1, 1.22, 1.4, 1.42, 1.58, 1.66, 1.74, 1.86, 1.9, 2.0, 2.06, 2.16, 2.24, 2.3, 2.36, 2.46, 2.58, 2.72, 2.8, 2.92, 3.02, 3.18, 3.24, 3.36, 3.52, 3.64, 3.72, 3.84, 3.96, 4.04, 4.2, 4.4, 4.6, 4.66, 4.8, 4.96, 5.08, 5.28, 5.44, 5.54, 5.68, 5.74, 6.0, 6.18, 6.34, 6.52, 6.74, 6.96, 7.08, 7.26, 7.46, 7.6, 7.8, 7.94, 8.16, 8.32, 8.66, 8.9, 9.18, 9.4, 9.7, 9.84, 10.02, 10.26, 10.46, 10.74, 10.88, 11.22, 11.7, 11.96, 12.22, 12.46, 12.72, 13.08, 13.48, 13.84, 14.1, 14.4, 14.76, 15.1, 15.28, 15.6, 15.98, 16.34, 16.58, 16.94, 17.32, 17.58, 17.9, 18.16, 18.46, 18.6, 18.94, 19.26, 19.54, 19.68, 19.92, 20.2, 20.54, 20.84, 21.32, 21.58, 21.88, 22.06, 22.34, 22.56, 22.88, 23.14, 23.3, 23.52, 23.72, 24.12, 24.42, 24.76, 25.0, 25.38, 25.64, 26.0, 26.26, 26.68, 27.06, 27.2, 27.58, 27.82, 28.24, 28.42, 28.9, 29.18, 29.52, 29.86, 30.14, 30.54, 30.94, 31.3, 31.6, 31.88, 32.28, 32.7, 32.92, 33.14, 33.52, 33.84, 34.16, 34.5, 34.82, 35.16, 35.54, 35.86, 36.04, 36.46, 36.86, 37.2, 37.52, 37.88, 38.18, 38.46, 38.74, 39.16, 39.42, 39.88, 40.1, 40.52, 41.02, 41.32, 41.66, 41.98, 42.3, 42.84, 43.12, 43.52, 43.84, 44.24, 44.68, 45.02, 45.4, 45.8, 46.26, 46.66, 47.04, 47.58, 47.94, 48.22, 48.58, 48.92, 49.32, 49.78, 50.16, 50.56, 51.04, 51.52, 52.02, 52.46, 52.86, 53.44, 53.74, 54.22, 54.86, 55.36, 55.8, 56.3, 56.78, 57.24, 57.58, 58.04, 58.46, 59.06, 59.48, 59.88, 60.32, 60.8, 61.28, 61.7, 62.1, 62.64, 63.06, 63.58, 64.0, 64.66, 65.04, 65.56, 65.96, 66.54, 67.16, 67.56, 67.98, 68.48, 68.98, 69.68, 70.2, 70.5, 70.84, 71.26, 71.92, 72.56, 72.92, 73.64, 74.14, 74.56, 75.24, 75.82, 76.44, 77.06, 77.58, 77.94, 78.44, 78.84, 79.36, 79.94, 80.46, 81.04, 81.6, 82.26, 82.7, 83.12, 83.66, 84.24, 84.7, 85.14, 85.74, 86.36, 86.9, 87.22, 87.56, 88.14, 88.64, 89.26, 89.7, 90.24, 90.86, 91.38, 92.12, 92.68, 93.32, 94.06, 94.64, 95.32, 95.88, 96.42, 96.98, 97.64, 98.24, 98.82, 99.46, 99.98, 100.48, 101.2, 101.76, 102.24, 102.64, 103.18, 103.9, 104.48, 105.04, 105.58, 106.24, 106.86, 107.52, 108.06, 108.7, 109.2, 109.7, 110.34, 111.04, 111.72, 112.2, 112.66, 113.42, 113.96, 114.62, 115.12, 115.68, 116.36, 116.88, 117.48, 118.08, 118.78, 119.34, 119.96, 120.58, 121.54, 121.96, 122.62, 123.3, 123.82, 124.32, 125.32, 125.92, 126.38, 126.96, 127.74, 128.26, 128.94, 129.58, 130.1, 130.78, 131.58, 132.3, 132.86, 133.5, 134.14, 134.88, 135.44, 136.26, 137.0, 137.48, 137.98, 138.6, 139.12, 139.68, 140.4, 140.96, 141.56, 142.26, 143.0, 143.54, 143.98, 144.46, 145.34, 146.16, 146.84, 147.56, 148.16, 148.76, 149.4, 150.08, 150.84, 151.58, 152.04, 152.84, 153.42, 154.08, 154.64, 155.38, 155.92, 156.78, 157.4, 158.1, 158.54, 159.42, 160.18, 160.78, 161.4, 162.2, 162.78, 163.36, 164.24, 165.04, 165.62, 166.2, 167.16, 168.02, 168.84, 169.5, 170.2, 171.0, 171.72, 172.54, 173.14, 173.9, 174.42, 175.02, 175.6, 176.36, 177.0, 177.84, 178.36, 179.24, 179.86, 180.6, 181.46, 182.12, 182.94, 183.84, 184.74, 185.28, 186.18, 186.74, 187.68, 188.5, 189.24, 189.82, 190.72, 191.52, 192.22, 193.16, 193.96, 194.64, 195.4, 196.14, 196.82, 197.46, 198.28, 199.14, 199.76, 200.68, 201.38, 202.22, 202.92, 203.72, 204.56, 205.4, 206.04, 206.64, 207.52, 208.32, 209.1, 209.8, 210.74, 211.52, 212.44, 213.32, 214.14, 215.04, 215.68, 216.52, 217.24, 218.1, 218.66, 219.5, 220.4, 221.26, 222.08, 222.56, 223.48, 224.42, 225.16, 226.04, 226.72, 227.52, 228.52, 229.38, 230.14, 230.94, 231.68, 232.62, 233.58, 234.46, 235.14, 235.72, 236.64, 237.42, 238.06, 239.06, 239.68, 240.56, 241.34, 242.06, 242.9, 243.9, 244.74, 245.42, 246.4, 247.22, 248.24, 249.04, 249.86, 250.58, 251.48]
        transactions_3boder = [0.44, 0.58, 0.76, 0.9, 1.0, 1.12, 1.26, 1.36, 1.52, 1.7, 1.76, 1.84, 2.02, 2.12, 2.18, 2.22, 2.32, 2.4, 2.6, 2.7, 2.86, 2.94, 3.04, 3.2, 3.26, 3.4, 3.54, 3.62, 3.7, 3.84, 4.02, 4.18, 4.32, 4.44, 4.64, 4.78, 4.98, 5.24, 5.38, 5.5, 5.58, 5.72, 5.84, 6.02, 6.18, 6.3, 6.5, 6.68, 6.88, 7.08, 7.24, 7.48, 7.66, 7.78, 7.92, 8.16, 8.22, 8.32, 8.56, 8.72, 8.94, 9.02, 9.22, 9.36, 9.64, 9.82, 9.96, 10.14, 10.58, 10.8, 10.9, 11.12, 11.28, 11.5, 11.78, 12.0, 12.2, 12.42, 12.66, 13.0, 13.2, 13.36, 13.6, 13.96, 14.18, 14.4, 14.52, 14.92, 15.16, 15.44, 15.64, 15.88, 16.1, 16.38, 16.6, 16.98, 17.1, 17.44, 17.7, 17.94, 18.18, 18.62, 18.98, 19.26, 19.48, 19.78, 20.06, 20.52, 20.78, 21.04, 21.52, 21.88, 22.04, 22.44, 22.7, 23.18, 23.5, 23.86, 24.08, 24.34, 24.64, 25.08, 25.38, 25.68, 25.96, 26.36, 26.7, 26.96, 27.2, 27.5, 27.84, 28.24, 28.7, 29.16, 29.36, 29.72, 30.14, 30.4, 30.86, 31.24, 31.62, 32.08, 32.34, 32.74, 33.08, 33.44, 33.9, 34.3, 34.72, 34.98, 35.34, 35.78, 36.18, 36.4, 36.8, 37.12, 37.48, 37.86, 38.2, 38.44, 38.74, 38.98, 39.54, 39.92, 40.32, 40.72, 40.98, 41.44, 41.64, 42.16, 42.46, 42.88, 43.18, 43.56, 43.98, 44.38, 44.62, 45.0, 45.42, 45.72, 46.0, 46.28, 46.76, 47.04, 47.52, 47.88, 48.24, 48.74, 49.0, 49.34, 49.62, 50.04, 50.24, 50.66, 50.98, 51.52, 51.88, 52.16, 52.46, 53.12, 53.4, 53.74, 54.2, 54.46, 55.08, 55.48, 56.0, 56.32, 56.62, 57.22, 57.62, 58.06, 58.44, 58.96, 59.3, 60.02, 60.28, 60.82, 61.28, 61.68, 62.26, 62.72, 63.24, 63.68, 64.28, 64.74, 65.24, 65.64, 66.04, 66.44, 67.0, 67.64, 68.1, 68.62, 69.08, 69.48, 69.94, 70.48, 71.04, 71.6, 72.22, 72.52, 73.04, 73.64, 74.2, 74.82, 75.28, 75.92, 76.52, 77.04, 77.54, 78.02, 78.62, 79.2, 79.64, 80.14, 80.68, 81.14, 81.64, 82.14, 82.48, 82.98, 83.58, 84.04, 84.48, 85.06, 85.58, 85.96, 86.64, 87.18, 87.78, 88.24, 88.6, 89.14, 89.84, 90.28, 90.9, 91.54, 92.16, 92.8, 93.38, 93.84, 94.42, 94.88, 95.42, 95.9, 96.28, 96.94, 97.34, 97.88, 98.62, 99.12, 99.52, 100.04, 100.6, 101.0, 101.54, 102.08, 102.8, 103.28, 103.78, 104.34, 104.76, 105.36, 105.9, 106.52, 107.1, 107.52, 108.26, 108.72, 109.18, 109.74, 110.36, 110.92, 111.42, 111.9, 112.6, 113.32, 114.02, 114.46, 115.28, 115.76, 116.42, 116.94, 117.54, 118.14, 118.68, 119.54, 120.08, 120.82, 121.48, 122.04, 122.74, 123.28, 123.76, 124.42, 125.24, 125.6, 126.3, 126.88, 127.66, 128.28, 129.0, 129.6, 130.34, 131.24, 131.76, 132.42, 133.12, 133.78, 134.34, 135.08, 135.68, 136.34, 137.12, 137.92, 138.48, 138.88, 139.62, 140.2, 140.9, 141.62, 142.28, 143.04, 143.64, 144.5, 145.04, 145.86, 146.38, 147.12, 147.62, 148.3, 148.98, 149.52, 150.48, 151.36, 152.0, 152.64, 153.34, 153.98, 154.66, 155.16, 155.8, 156.48, 157.12, 157.9, 158.64, 159.26, 160.0, 160.72, 161.42, 162.24, 162.94, 163.78, 164.5, 165.38, 166.16, 166.74, 167.52, 168.28, 168.98, 169.8, 170.54, 171.22, 171.84, 172.62, 173.54, 174.06, 174.68, 175.5, 176.12, 176.76, 177.52, 178.22, 178.9, 179.66, 180.28, 181.08, 181.64, 182.26, 183.02, 183.58, 184.36, 185.14, 186.06, 186.8, 187.56, 188.4, 189.2, 189.9, 190.74, 191.5, 192.3, 192.98, 193.68, 194.36, 195.12, 195.82, 196.3, 197.26, 198.18, 198.9, 199.62, 200.32, 201.0, 201.66, 202.5, 203.1, 204.04, 204.72, 205.28, 206.18, 207.02, 207.78, 208.4, 209.3, 209.96, 210.58, 211.24, 211.92, 212.7, 213.48, 214.5, 215.3, 215.88, 216.78, 217.74, 218.56, 219.36, 220.24, 221.18, 222.12, 223.04, 223.96, 224.72, 225.9, 226.56, 227.38, 228.34, 229.1, 229.94, 231.04, 231.94, 232.9, 233.58, 234.4, 235.14, 236.16, 236.9, 237.76, 238.5, 239.5, 240.4, 241.18, 241.96, 242.94, 243.62, 244.56, 245.48, 246.38, 247.42, 248.26, 249.18, 250.0, 250.74, 251.74, 252.72, 253.36]
        transactions_2boder = [0.54, 0.68, 0.82, 0.94, 1.06, 1.26, 1.48, 1.52, 1.64, 1.68, 1.76, 1.84, 2.04, 2.18, 2.38, 2.52, 2.68, 2.72, 2.92, 3.0, 3.14, 3.32, 3.5, 3.6, 3.74, 3.84, 3.94, 4.06, 4.14, 4.32, 4.46, 4.6, 4.8, 5.0, 5.16, 5.26, 5.44, 5.6, 5.72, 5.84, 6.0, 6.18, 6.42, 6.58, 6.8, 6.96, 7.08, 7.12, 7.26, 7.4, 7.54, 7.8, 7.92, 8.12, 8.34, 8.5, 8.7, 8.92, 9.1, 9.24, 9.54, 9.7, 9.9, 10.08, 10.24, 10.48, 10.62, 10.76, 10.96, 11.12, 11.22, 11.4, 11.66, 11.86, 12.04, 12.26, 12.54, 12.68, 12.86, 13.0, 13.18, 13.36, 13.64, 13.9, 14.1, 14.32, 14.52, 14.68, 14.86, 15.08, 15.46, 15.68, 15.98, 16.16, 16.36, 16.72, 16.94, 17.2, 17.46, 17.74, 18.14, 18.38, 18.68, 18.92, 19.12, 19.46, 19.64, 19.78, 20.06, 20.5, 20.74, 21.1, 21.44, 21.64, 21.92, 22.26, 22.64, 22.98, 23.32, 23.58, 24.0, 24.34, 24.52, 24.96, 25.42, 25.64, 25.98, 26.32, 26.58, 26.92, 27.24, 27.64, 28.02, 28.34, 28.78, 29.02, 29.32, 29.64, 30.12, 30.42, 30.78, 31.02, 31.36, 31.78, 32.0, 32.3, 32.72, 33.08, 33.38, 33.78, 34.08, 34.5, 34.72, 35.06, 35.38, 35.7, 36.02, 36.48, 36.76, 37.16, 37.44, 37.88, 38.14, 38.7, 39.06, 39.48, 39.9, 40.24, 40.76, 41.14, 41.52, 41.88, 42.24, 42.5, 42.86, 43.32, 43.7, 44.08, 44.4, 44.64, 44.98, 45.42, 45.72, 46.18, 46.64, 46.84, 47.34, 47.68, 48.2, 48.62, 48.96, 49.4, 49.76, 49.96, 50.5, 50.88, 51.24, 51.46, 51.86, 52.22, 52.54, 52.98, 53.26, 53.58, 54.0, 54.56, 55.0, 55.48, 55.92, 56.36, 56.74, 57.26, 57.68, 58.32, 58.66, 59.08, 59.64, 60.16, 60.5, 60.96, 61.56, 61.98, 62.4, 62.8, 63.28, 63.76, 64.1, 64.54, 65.18, 65.52, 66.08, 66.58, 67.06, 67.46, 67.84, 68.32, 68.86, 69.26, 69.54, 70.1, 70.54, 70.96, 71.44, 71.92, 72.42, 73.0, 73.5, 73.74, 74.22, 74.94, 75.46, 75.94, 76.36, 76.92, 77.46, 77.88, 78.26, 78.82, 79.54, 79.9, 80.48, 81.0, 81.34, 81.88, 82.58, 83.04, 83.64, 84.1, 84.68, 85.2, 85.82, 86.48, 86.98, 87.54, 88.22, 88.82, 89.36, 89.9, 90.5, 91.14, 91.44, 91.94, 92.6, 93.06, 93.64, 94.06, 94.82, 95.5, 95.84, 96.32, 96.92, 97.44, 98.08, 98.5, 98.9, 99.52, 100.08, 100.66, 101.2, 101.58, 102.12, 102.58, 103.38, 103.86, 104.56, 105.2, 105.7, 106.36, 107.04, 107.56, 108.2, 108.8, 109.46, 110.06, 110.86, 111.34, 112.0, 112.46, 113.12, 113.68, 114.28, 114.74, 115.38, 115.94, 116.36, 116.92, 117.56, 118.1, 118.72, 119.28, 119.76, 120.46, 120.92, 121.46, 121.86, 122.5, 123.26, 123.88, 124.38, 125.06, 125.52, 126.26, 126.94, 127.42, 128.2, 128.94, 129.46, 130.08, 130.62, 131.16, 131.88, 132.6, 133.36, 134.02, 134.6, 135.26, 135.88, 136.38, 137.1, 137.76, 138.46, 138.94, 139.44, 140.1, 140.76, 141.38, 142.14, 142.76, 143.22, 143.76, 144.36, 145.02, 145.78, 146.48, 147.12, 147.7, 148.3, 149.08, 149.88, 150.56, 151.26, 151.84, 152.46, 153.1, 153.84, 154.54, 155.18, 155.8, 156.64, 157.48, 158.04, 158.74, 159.5, 160.18, 160.86, 161.54, 162.38, 163.24, 163.96, 164.54, 165.24, 165.78, 166.54, 167.42, 168.18, 168.94, 169.6, 170.32, 171.08, 171.72, 172.34, 173.04, 173.72, 174.58, 175.32, 175.96, 176.8, 177.56, 178.1, 178.72, 179.52, 180.32, 180.94, 181.7, 182.54, 183.3, 183.94, 184.7, 185.2, 186.0, 186.7, 187.48, 188.16, 188.84, 189.58, 190.4, 191.0, 191.92, 192.66, 193.36, 194.26, 195.0, 195.7, 196.34, 197.04, 197.88, 198.72, 199.54, 200.16, 200.94, 201.7, 202.54, 203.22, 203.84, 204.76, 205.54, 206.26, 207.0, 207.94, 208.52, 209.32, 210.1, 210.8, 211.7, 212.34, 213.18, 213.94, 214.84, 215.44, 216.14, 217.14, 217.66, 218.46, 219.28, 220.14, 220.96, 221.76, 222.54, 223.32, 224.14, 225.14, 225.88, 226.72, 227.52, 228.2, 228.94, 229.7, 230.4, 231.02, 231.66, 232.5, 233.24, 233.92, 234.74, 235.76, 236.46, 237.38, 238.44, 239.24, 240.08, 240.98, 241.62, 242.48, 243.18, 244.0, 244.8, 245.68, 246.4]
        transactions_1bod = [0.42, 0.52, 0.54, 0.66, 0.78, 0.88, 0.94, 1.06, 1.14, 1.24, 1.3, 1.46, 1.52, 1.72, 1.84, 1.86, 2.02, 2.16, 2.26, 2.4, 2.44, 2.58, 2.74, 2.92, 3.06, 3.14, 3.24, 3.3, 3.36, 3.48, 3.64, 3.9, 4.02, 4.14, 4.28, 4.38, 4.54, 4.66, 4.76, 4.82, 4.98, 5.08, 5.28, 5.42, 5.56, 5.62, 5.74, 5.86, 5.98, 6.12, 6.24, 6.38, 6.5, 6.7, 6.86, 6.94, 7.12, 7.2, 7.34, 7.48, 7.64, 7.84, 7.98, 8.1, 8.22, 8.46, 8.72, 8.92, 9.12, 9.28, 9.48, 9.68, 9.8, 10.02, 10.22, 10.46, 10.56, 10.72, 10.94, 11.2, 11.28, 11.46, 11.66, 11.82, 12.0, 12.3, 12.4, 12.54, 12.72, 12.92, 13.08, 13.28, 13.46, 13.66, 13.82, 14.06, 14.16, 14.42, 14.64, 14.8, 15.08, 15.24, 15.48, 15.72, 15.94, 16.18, 16.36, 16.54, 16.84, 17.06, 17.3, 17.54, 17.78, 18.04, 18.3, 18.56, 18.78, 19.04, 19.22, 19.56, 19.84, 20.14, 20.34, 20.46, 20.7, 21.1, 21.36, 21.6, 22.0, 22.2, 22.46, 22.74, 23.02, 23.32, 23.72, 23.96, 24.2, 24.42, 24.82, 25.2, 25.54, 25.72, 26.02, 26.28, 26.62, 27.02, 27.44, 27.74, 28.12, 28.5, 28.76, 28.94, 29.28, 29.54, 29.84, 30.18, 30.58, 30.88, 31.1, 31.4, 31.78, 32.16, 32.36, 32.64, 32.98, 33.5, 33.92, 34.32, 34.64, 35.06, 35.42, 35.82, 36.14, 36.4, 36.76, 37.08, 37.4, 37.7, 38.08, 38.36, 38.66, 38.92, 39.24, 39.6, 39.94, 40.36, 40.68, 41.06, 41.48, 41.7, 42.12, 42.54, 42.8, 43.22, 43.52, 43.96, 44.34, 44.7, 44.96, 45.38, 45.64, 46.04, 46.64, 47.06, 47.48, 48.04, 48.44, 48.72, 49.04, 49.56, 49.94, 50.38, 50.82, 51.22, 51.68, 52.16, 52.58, 53.08, 53.5, 53.82, 54.18, 54.46, 54.88, 55.28, 55.64, 55.84, 56.3, 56.78, 57.28, 57.76, 58.14, 58.58, 58.92, 59.28, 59.7, 60.08, 60.58, 60.88, 61.28, 61.7, 62.22, 62.6, 63.16, 63.6, 63.98, 64.36, 64.94, 65.3, 65.92, 66.34, 66.84, 67.34, 67.74, 68.24, 68.66, 69.28, 69.72, 70.2, 70.68, 71.26, 71.68, 72.06, 72.44, 72.96, 73.44, 73.8, 74.3, 75.02, 75.4, 75.72, 76.22, 76.56, 76.92, 77.4, 77.92, 78.38, 78.88, 79.36, 79.78, 80.06, 80.7, 81.2, 81.72, 82.06, 82.62, 83.02, 83.58, 84.06, 84.48, 84.92, 85.52, 86.02, 86.38, 86.8, 87.22, 87.92, 88.4, 88.84, 89.46, 89.88, 90.36, 90.92, 91.5, 91.98, 92.44, 92.82, 93.4, 93.96, 94.52, 95.22, 95.8, 96.36, 96.86, 97.3, 97.8, 98.3, 98.94, 99.5, 99.96, 100.46, 101.02, 101.54, 102.04, 102.56, 103.24, 103.86, 104.4, 104.9, 105.52, 106.04, 106.32, 106.94, 107.52, 108.06, 108.52, 109.08, 109.38, 110.0, 110.66, 111.3, 111.84, 112.3, 112.84, 113.26, 113.86, 114.4, 114.96, 115.48, 116.12, 116.72, 117.28, 117.92, 118.38, 119.04, 119.64, 120.24, 120.98, 121.4, 121.92, 122.56, 123.0, 123.6, 124.08, 124.68, 125.28, 126.06, 126.56, 127.1, 127.66, 128.1, 128.74, 129.26, 129.96, 130.56, 131.18, 131.78, 132.3, 132.88, 133.64, 134.06, 134.6, 135.12, 135.66, 136.28, 136.9, 137.5, 138.06, 138.64, 139.44, 140.0, 140.7, 141.2, 141.8, 142.5, 143.24, 143.8, 144.56, 145.0, 145.92, 146.54, 147.06, 147.5, 148.12, 148.74, 149.26, 149.84, 150.48, 151.16, 151.78, 152.46, 153.08, 153.7, 154.3, 155.06, 155.66, 156.48, 157.1, 157.9, 158.36, 159.0, 159.84, 160.48, 161.12, 161.9, 162.5, 163.24, 164.0, 164.54, 165.06, 165.78, 166.46, 167.3, 167.88, 168.36, 169.08, 169.8, 170.48, 170.98, 171.58, 172.12, 172.68, 173.42, 174.04, 174.84, 175.5, 176.1, 176.64, 177.36, 178.24, 178.74, 179.38, 180.02, 180.56, 181.26, 182.0, 182.56, 183.26, 183.9, 184.6, 185.18, 185.84, 186.56, 187.28, 188.1, 188.92, 189.52, 190.06, 190.78, 191.46, 192.04, 192.78, 193.5, 194.1, 194.88, 195.28, 196.02, 196.82, 197.7, 198.56, 199.14, 199.62, 200.42, 201.0, 201.46, 202.08, 202.9, 203.52, 204.2, 204.88, 205.5, 206.26, 206.96, 207.6, 208.38, 209.04, 209.74, 210.44, 211.14, 211.78, 212.48, 213.0, 213.86, 214.52, 215.44, 216.22, 216.76, 217.5, 218.14]

        max_trans_4 = [249, 248, 248, 216, 275, 226, 255, 322, 241, 283, 275, 274, 260, 219, 219, 210, 242, 251, 260, 250, 195, 243, 216, 230, 231, 236, 284, 285, 260, 274, 261, 269, 239, 320, 227, 287, 303, 238, 273, 182, 290, 198, 246, 244, 224, 286, 246, 233, 225, 306]
        max_trans_3 = [229, 279, 261, 265, 253, 251, 216, 287, 274, 233, 228, 233, 253, 219, 257, 240, 232, 236, 280, 233, 262, 244, 236, 243, 328, 255, 267, 276, 207, 247, 250, 229, 285, 240, 215, 300, 272, 268, 295, 264, 258, 249, 268, 256, 259, 247, 245, 274, 221, 249]
        max_trans_2 =  [222, 242, 229, 272, 204, 215, 240, 228, 267, 212, 273, 242, 228, 238, 275, 252, 266, 271, 240, 234, 241, 262, 256, 232, 291, 227, 202, 255, 231, 243, 244, 249, 228, 233, 282, 231, 240, 240, 260, 258, 238, 215, 285, 259, 270, 271, 263, 267, 249, 248]
        max_trans_1 = [230, 209, 228, 215, 242, 216, 231, 228, 198, 210, 239, 248, 233, 219, 216, 247, 201, 245, 215, 212, 205, 220, 237, 254, 220, 206, 207, 205, 206, 196, 226, 216, 172, 222, 198, 238, 182, 249, 227, 222, 219, 193, 198, 201, 214, 181, 245, 197, 236, 233]
     #   print(np.mean(max_trans_4),np.mean(max_trans_3),np.mean(max_trans_2),np.mean(max_trans_1))
      #  print(np.std(max_trans_4),np.std(max_trans_3),np.std(max_trans_2),np.std(max_trans_1))


        """
        Function that is called for each time step, that makes sure our model behaves according to our
        predefined model assumptions.
        :return: None
        """
        #Concert is starting
        if self.time_step == 90:
            self.concert_is_on = True
            start_concert(self)
        #Concert is ending
        elif self.time_step == 630:
            self.concert_is_on = False
            self.concert_has_ended = True
            end_concert(self)
        #Remove agents that are at an entré-pos and thus are leaving the festival site
        elif self.time_step>630:
            remove_leaving_guests(self)

        #With poisson-distribution people leave and join the concert
        if self.time_step in [i for i in range(91,630)]:
            p_leave = np.random.poisson(1/4)
            for i in range(0,p_leave):
                guests_at_concert = [a for a in self.schedule.agents if isinstance(a, agents.guest) and a.at_concert == True]
                agent = self.random.choice(guests_at_concert)
                agent.at_concert = False

            p_join = np.random.poisson(1/8)
            for i in range(0,p_join):
                    max_id = max([a.id for a in self.schedule.agents if isinstance(a, agents.guest)])
                    newAgent = agents.guest(max_id + 1, self)
                    self.schedule.add(newAgent)
                    x_,y_ = self.random.choice(self.entre_pos)
                    newAgent.at_concert = True
                    self.grid.place_agent(newAgent,(x_,y_))


        #Update time
        self.time_step += 1
        if self.time_step%6==0:
            self.minute_count += 1
        if self.minute_count%60 == 0:
            self.hour_count += 1

        #Activate all agents' step-function
        self.schedule.step()
        #Collect data after each (time)step
        self.datacollector.collect(self)

        #Stop model after 720 timesteps
        if self.time_step == 720:
            self.running = False

#Helper functions to collect data
def number_of_guests(self):
    """
    Function that counts number of guests.
    :param self:
    :return: int, number of guests.
    """
    guests = [a for a in self.schedule.agents if isinstance(a, agents.guest)]
    return len(guests)

def busy_employees(self):
    """
    Function that counts number of busy employees
    :param self:
    :return: int, number of busy employees
    """
    employees_busy = [a for a in self.schedule.agents if isinstance(a, agents.employee) and a.busy == True]
    return len(employees_busy)

def number_of_transactions_during_concert(self):
        """
        Function that counts number of transactions during concert.
        :param self:
        :return:  int, number of transactions during concert.
        """
       # if self.time_step<123:
      #      agents_ = [a for a in self.schedule.agents if isinstance(a, agents.guest)]
         #   deleted = [a for a in self.deleted_agents]
        #    for a in agents_+deleted:
          #      a.number_of_transaction = 0

        agents_ = [a.number_of_transaction for a in self.schedule.agents if isinstance(a, agents.guest)]
        deleted = [a.number_of_transaction for a in self.deleted_agents]
        return sum(agents_+deleted)

def number_of_transactions_total(self):
    """
        Function that counts number of transactions in total.
        :param self:
        :return:  int, number of transactions in total.
        """
    agents_ = [a.number_of_transaction for a in self.schedule.agents if isinstance(a, agents.guest)]
    deleted = [a.number_of_transaction for a in self.deleted_agents]
    return sum(agents_+deleted)

def queuing(self):
     """
        Function that counts number of agents queuing
        :param self:
        :return:  int, number of agents queuing.
        """
     agents_queuing = [a for a in self.schedule.agents if isinstance(a, agents.guest) and a.queuing == True]
     return len(agents_queuing)

def end_concert(self):
    """
    Function ending concert by setting all agents.at_concert= False
    :param self:
    :return: None
    """
    all_guests = [a for a in self.schedule.agents if isinstance(a, agents.guest)]
    for a in all_guests:
        a.at_concert = False

def start_concert(self):
    """
    Function starting concert by setting all agents.at_concert= True
    :param self:
    :return: None
    """
    all_guests = [a for a in self.schedule.agents if isinstance(a, agents.guest)]
    for a in all_guests:
        a.at_concert = True

def remove_leaving_guests(self):
    """
    Function removing guests that hits the exit/entre positions.
    :param self:
    :return: None
    """
    agents_that_left = [a for a in self.schedule.agents if isinstance(a, agents.guest) and a.has_left == True] #checking if agent has hit entre pos
    for a in agents_that_left:
        self.deleted_agents.append(a)
        self.schedule.remove(a) #removing from logical grid
        self.grid.remove_agent(a) #removing from visual grid


"""
 Functions below set up the model (both logical and visual)
"""
def setUpGuests(self,N):
    """
    Function adding guests to logical and visual grid. Guests are randomly placed on empty cell in visual grid,
    however, x value must be at least 3, so they do not get placed inside the scene.
    :param self:
    :param N: int, number of guests
    :return: None
    """
    for i in range(0,N):
        newAgent = agents.guest(i, self) #making N new agents
        self.schedule.add(newAgent) # Adding new agents to the logical grid
        x_,y = self.grid.find_empty() #finding empty spots in visual grid
        x = max(3,x_)
        self.grid.place_agent(newAgent,(x,y)) #placing agents in grid

def setUpScene(self):
    """
    Function adding scene to logical and visual grid. Copy self.sceneCoords so the original list is not emptied by pop()-operation.
    We need original list for later (when concert is on and guests are attracted to the scene).
    Scene is NOT placed randomly.
    :param self:
    :return: None
    """
    coords = list.copy(self.sceneCoords) #getting scene coordinates
    for i in range(1000,1000+len(coords)):
        newAgent = agents.orangeScene(i, self) #making agent orange scene
        self.schedule.add(newAgent)  #placing scene on logical grid
        x,y = coords.pop()
        self.grid.place_agent(newAgent,(x,y)) #placing scene

def setUpStalls(self):
    """
    Function adding the beer stalls to logical and visual grid and everything that goes with it;exits from the stalls and the desks in the beer stalls.
    Copy self.stall_positions so the original list is not emptied by pop()-operation. We need original list for later
    Stalls, exit positions and desks are NOT placed randomly.
    :param self:
    :return: None
    """
    positions = list.copy(self.stall_positions) #Getting stall positions
    counter=0
    for i in range(2000,2000+len(self.stall_positions)*5,5):
        newAgent = agents.beerstall(i, self) #making new agent beerstall
        self.schedule.add(newAgent) #adding beerstall to logical grid
        x,y = positions.pop()
        self.grid.place_agent(newAgent,(x,y)) #placing scene

        if y>25: #Where to put stall's exit-positions - depends on where on the grid the stall is
            newAgent.stall_exit_pos.append((x - 7, y - 3))
            newAgent.stall_exit_pos.append((x + 7, y - 3))
        else:
            newAgent.stall_exit_pos.append((x - 7, y + 3))
            newAgent.stall_exit_pos.append((x + 7, y + 3))


        #People cannot get past the desk-line (the ones colored pink)
        desk_pos_ = [(x-1,y-1),(x+1,y+1),(x-1,y+1),(x+1,y-1)]

        for pos_ in desk_pos_:
            newAgent = agents.desk(pos_, self)
            self.schedule.add(newAgent)
            self.grid.place_agent(newAgent,pos_)
        counter+=1

def setUpEmployees(self):
    """
    Function adding employees. Employees are connected to a beerstall and they are NOT placed randomly.
    They all have one list of positions, this is where guests can queue for beer.
    :param self:
    :return: None
    """
    teams = []
    positions = reversed(self.stall_positions)

    #Put employees at right positions in regards to beerstalls
    for pos in positions:
        e1 = (pos[0],pos[1]-1)
        e2 = (pos[0]-1,pos[1])
        e3 = (pos[0]+1,pos[1])
        e4 = (pos[0],pos[1]+1)

        team = (e1,e2,e3,e4) #defining teams
        teams.append(team)

    dir = ("s","w","e","n") #defining directions - used to set up queue accordingly


    #add the employees to the correct beerstall, make their queue-positions and add them to the logical and visual grid
    counter = 0
    for t in teams:
        stall = [stall for stall in self.schedule.agents if stall.id == 2000+counter][0]
        temp = []
        for i in range(0,4): #setting up employees and defining their id
            newAgent = agents.employee(stall.id + (i + 1), self)
            direction = dir[i] #setting direction
            newAgent.stall = stall #setting which stall the employee belongs to
            self.schedule.add(newAgent) #adding new agent to logical grid
            x,y = t[i] #getting position of team
            self.grid.place_agent(newAgent,(x,y)) #placing agent at position
            self.employees.append(newAgent) #adding employee to list
            temp.append(newAgent)
            newAgent.queue_list = make_queue((x,y), direction) #setting the queue to the employee according to what direction they are standing in

        stall.employees = temp
        counter += 5

def make_queue(pos, direction):
    """
    The queues' shape are pre-defined, make_queue functions creates a queue based on direction and position on grid
    :param pos: tuple
    :param direction: character literal, representing direction
    :return: list, with positions for queue
    """
    x,y = pos
    queue_list = []
    if direction == 'n':
        queue_list = [(x,y+1), (x,y+2), (x+1,y+2), (x+2, y+2), (x+3, y+2), (x+3, y+3), (x+4, y+3), (x+5, y+3)]
    if direction == 's':
        queue_list = [(x,y-1), (x, y-2), (x+1, y-2), (x+1, y-3), (x+1, y-4), (x, y-4), (x, y-5), (x-1, y-5)]
    if direction == "e":
        queue_list = [(x+1, y), (x+2, y), (x+2, y+1), (x+3, y+1), (x+4, y+1), (x+4, y), (x+5, y), (x+6, y)]
    if direction == "w":
        queue_list = [(x-1, y), (x-2, y), (x-2, y+1), (x-3, y+1), (x-4, y+1), (x-4, y), (x-5, y), (x-6, y)]
    return queue_list

def setUpFence(self):
    """
    Function making positions of horizontal and vertical fence
    :param self:
    :return: None
    """
    pos_vertical_fence = [(2,i) for i in range(16,33)]
    pos_horizontal_fence = [(0,16),(1,16),(0,32),(1,32)]
    ids = [i for i in range (3000,3000+len(pos_horizontal_fence)+len(pos_vertical_fence))]

    for pos in pos_vertical_fence: #vertical fence positions
        newAgent = agents.fence(ids.pop(), self)
        self.schedule.add(newAgent) #adding to logical grid
        newAgent.orientation = 'v'
        x,y = pos
        self.grid.place_agent(newAgent,(x,y)) #adding to visual grid

    for pos in pos_horizontal_fence: #horizontal fence positions
        newAgent = agents.fence(ids.pop(), self)
        self.schedule.add(newAgent) #adding to logical grid
        newAgent.orientation = 'h'
        x,y = pos
        self.grid.place_agent(newAgent,(x,y)) #adding to visual grid

def setUpEntrePos(self):
     """
     Function making entre positions where guests join throughout the concert and where guests leave when concert is done
     :param self:
     :return: None
     """
     ids = [i for i in range (4000, 4000 + len(self.entre_pos))]
     for pos in self.entre_pos:
        newAgent = agents.exit(ids.pop(), self)
        self.schedule.add(newAgent) #adding exit to logical grid
        self.grid.place_agent(newAgent,pos) #adding to visual grid
